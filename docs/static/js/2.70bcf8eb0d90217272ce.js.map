{"version":3,"sources":["webpack:///./node_modules/engine.io-client/build/esm/contrib/yeast.js","webpack:///./node_modules/engine.io-client/build/esm/transports/websocket.js","webpack:///./node_modules/engine.io-client/build/esm/globalThis.browser.js","webpack:///./node_modules/engine.io-client/build/esm/contrib/parseqs.js","webpack:///./node_modules/engine.io-client/build/esm/contrib/has-cors.js","webpack:///./node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","webpack:///./node_modules/engine.io-client/build/esm/transports/polling.js","webpack:///./node_modules/engine.io-client/build/esm/transports/index.js","webpack:///./node_modules/engine.io-client/build/esm/transports/webtransport.js","webpack:///./node_modules/engine.io-client/build/esm/contrib/parseuri.js","webpack:///./node_modules/engine.io-client/build/esm/socket.js","webpack:///./node_modules/engine.io-client/build/esm/index.js","webpack:///./node_modules/socket.io-parser/build/esm/is-binary.js","webpack:///./node_modules/socket.io-parser/build/esm/binary.js","webpack:///./node_modules/socket.io-parser/build/esm/index.js","webpack:///./node_modules/socket.io-client/build/esm/on.js","webpack:///./node_modules/socket.io-client/build/esm/socket.js","webpack:///./node_modules/socket.io-client/build/esm/contrib/backo2.js","webpack:///./node_modules/socket.io-client/build/esm/manager.js","webpack:///./node_modules/socket.io-client/build/esm/index.js","webpack:///./node_modules/socket.io-client/build/esm/url.js","webpack:///src/pages/test/index.vue","webpack:///./src/pages/test/config/svgString.js","webpack:///./src/pages/test/index.vue?d4e1","webpack:///./src/pages/test/index.vue","webpack:///./node_modules/engine.io-client/build/esm/util.js","webpack:///./node_modules/engine.io-client/build/esm/transport.js","webpack:///./node_modules/@socket.io/component-emitter/index.mjs","webpack:///./node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","webpack:///./node_modules/engine.io-parser/build/esm/commons.js","webpack:///./node_modules/engine.io-parser/build/esm/encodePacket.browser.js","webpack:///./node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","webpack:///./node_modules/engine.io-parser/build/esm/decodePacket.browser.js","webpack:///./node_modules/engine.io-parser/build/esm/index.js"],"names":["__webpack_exports__","now","encode","Date","prev","seed","alphabet","split","length","map","i","num","encoded","Math","floor","Buffer","__WEBPACK_IMPORTED_MODULE_0__transport_js__","__webpack_require__","__WEBPACK_IMPORTED_MODULE_1__contrib_yeast_js__","__WEBPACK_IMPORTED_MODULE_2__util_js__","__WEBPACK_IMPORTED_MODULE_3__websocket_constructor_js__","__WEBPACK_IMPORTED_MODULE_4_engine_io_parser__","isReactNative","navigator","product","toLowerCase","[object Object]","opts","super","this","supportsBinary","forceBase64","name","check","uri","protocols","Object","extraHeaders","headers","ws","err","emitReserved","binaryType","socket","addEventListeners","onopen","autoUnref","_socket","unref","onOpen","onclose","closeEvent","onClose","description","context","onmessage","ev","onData","data","onerror","e","onError","packets","writable","packet","lastPacket","options","compress","perMessageDeflate","byteLength","threshold","send","setTimeoutFn","close","schema","secure","query","timestampRequests","timestampParam","b64","createUri","globalThisShim","self","window","Function","obj","str","hasOwnProperty","encodeURIComponent","qs","qry","pairs","l","pair","decodeURIComponent","has_cors_value","XMLHttpRequest","hasCORS","XHR","xdomain","globalThis_browser","concat","join","empty","hasXHR2","responseType","polling_Request","component_emitter","util","method","undefined","create","_a","xd","xhr","open","setDisableHeaderCheck","setRequestHeader","cookieJar","addCookies","withCredentials","requestTimeout","timeout","onreadystatechange","readyState","parseCookies","status","onLoad","document","index","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","addEventListener","terminationEvent","transports","websocket","webtransport","transport","WebTransport","transportOptions","closed","then","catch","ready","createBidirectionalStream","stream","reader","readable","getReader","binaryFlag","writer","getWriter","read","done","value","onPacket","esm","handshake","sid","write","TextEncoder","type","Uint8Array","of","websocket_constructor_browser","polling","location","isSSL","protocol","port","hostname","createCookieJar","poll","onPause","pause","total","once","doPoll","forEach","doWrite","yeast","assign","fn","req","request","on","xhrStatus","bind","pollXhr","re","parts","parse","src","b","indexOf","substring","replace","m","exec","source","host","authority","ipv6uri","pathNames","path","names","slice","splice","queryKey","$0","$1","$2","socket_Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","closeOnBeforeunload","parseqs","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","beforeunloadEventListener","removeAllListeners","offlineEventListener","EIO","priorWebsocketSuccess","createTransport","shift","setTransport","onDrain","reason","failed","onTransportOpen","msg","upgrading","flush","Error","freezeTransport","error","onTransportClose","onupgrade","to","removeListener","off","probe","onHandshake","JSON","resetPingTimeout","sendPacket","code","filterUpgrades","maxPayload","clearTimeoutFn","getWritablePackets","payloadSize","push","cleanupAndClose","waitForUpgrade","removeEventListener","filteredUpgrades","j","withNativeArrayBuffer","ArrayBuffer","isView","buffer","is_binary_toString","prototype","toString","withNativeBlob","Blob","call","withNativeFile","File","isBinary","deconstructPacket","buffers","packetData","pack","_deconstructPacket","placeholder","_placeholder","Array","isArray","newData","key","attachments","reconstructPacket","_reconstructPacket","isIndexValid","RESERVED_EVENTS","esm_protocol","PacketType","esm_Encoder","replacer","EVENT","ACK","hasBinary","toJSON","arguments","encodeAsString","encodeAsBinary","BINARY_EVENT","BINARY_ACK","nsp","stringify","deconstruction","unshift","isObject","esm_Decoder","reviver","reconstructor","isBinaryEvent","decodeString","esm_BinaryReconstructor","base64","takeBinaryData","p","Number","charAt","start","buf","next","c","payload","tryParse","substr","isPayloadValid","CONNECT","DISCONNECT","CONNECT_ERROR","finishedReconstruction","reconPack","binData","socket_RESERVED_EVENTS","freeze","connect","connect_error","disconnect","disconnecting","newListener","esm_socket_Socket","io","connected","recovered","receiveBuffer","sendBuffer","_queue","_queueSeq","ids","acks","flags","auth","_opts","_autoConnect","disconnected","subs","onpacket","active","subEvents","_readyState","args","emit","apply","retries","fromQueue","volatile","_addToQueue","ack","pop","_registerAckCallback","isTransportWritable","engine","notifyOutgoingListeners","ackTimeout","timer","withErr","Promise","resolve","reject","arg1","arg2","tryCount","pending","responseArgs","_drainQueue","force","_packet","_sendConnectPacket","_pid","pid","offset","_lastOffset","onconnect","onevent","onack","ondisconnect","destroy","message","emitEvent","_anyListeners","listeners","listener","sent","emitBuffered","subDestroy","_anyOutgoingListeners","Backoff","ms","min","max","factor","jitter","attempts","duration","pow","rand","random","deviation","reset","setMin","setMax","setJitter","manager_Manager","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","build_esm_namespaceObject","encoder","Encoder","decoder","Decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","_reconnecting","reconnect","skipReconnect","openSubDestroy","maybeReconnectOnOpen","errorSub","onping","ondata","ondecoded","add","keys","_close","encodedPackets","delay","onreconnect","attempt","cache","lookup","parsed","loc","test","href","url","sameNamespace","forceNew","multiplex","Manager","Socket","scene","camera","renderer","computed","svgString","methods","init","THREE","Scene","PerspectiveCamera","innerWidth","innerHeight","WebGLRenderer","canvas","querySelector","setSize","setCamera","position","set","lookAt","render","addGeometry","shape","Shape","moveTo","lineTo","pathShape","transformSVGPathExposed","geometry","ExtrudeGeometry","amount","bevelEnabled","material","MeshPhongMaterial","color","mesh","Mesh","loop","requestAnimationFrame","control","controls","OrbitControls","enableDamping","dampingFactor","rotateSpeed","mounted","console","log","pages_test","_h","$createElement","_c","_self","staticClass","attrs","_v","domProps","innerHTML","_s","staticRenderFns","Component","normalizeComponent","ssrContext","attr","reduce","acc","k","useNativeTimers","NATIVE_SET_TIMEOUT","__WEBPACK_IMPORTED_MODULE_0__globalThis_js__","NATIVE_CLEAR_TIMEOUT","setTimeout","clearTimeout","charCodeAt","utf8Length","ceil","size","BASE64_OVERHEAD","__WEBPACK_IMPORTED_MODULE_0_engine_io_parser__","__WEBPACK_IMPORTED_MODULE_1__socket_io_component_emitter__","__WEBPACK_IMPORTED_MODULE_3__contrib_parseqs_js__","TransportError","doOpen","doClose","details","_hostname","_port","_query","encodedQuery","Emitter","mixin","event","_callbacks","cb","callbacks","len","hasListeners","nextTick","WebSocket","MozWebSocket","PACKET_TYPES","PACKET_TYPES_REVERSE","ERROR_PACKET","encodePacket","callback","encodeBlobAsBase64","fileReader","FileReader","onload","content","result","readAsDataURL","toArray","byteOffset","TEXT_ENCODER","encodePacketToBinary","arrayBuffer","chars","decodePacket_browser_withNativeArrayBuffer","decodePacket","encodedPacket","mapBinary","decodeBase64Packet","decoded","encoded1","encoded2","encoded3","encoded4","bufferLength","arraybuffer","bytes","decode","TEXT_DECODER","TextDecoder","isPlainBinary","d","encodePayload","decodePayload","SEPARATOR","String","fromCharCode","count","encodedPayload","decodedPacket"],"mappings":"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","file":"static/js/2.70bcf8eb0d90217272ce.js","sourcesContent":["// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/engine.io-client/build/esm/contrib/yeast.js\n// module id = 0xGl\n// module chunks = 2","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket, } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @param {Object} opts - connection options\n     * @protected\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @private\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/engine.io-client/build/esm/transports/websocket.js\n// module id = 46ua\n// module chunks = 2","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/engine.io-client/build/esm/globalThis.browser.js\n// module id = KXQW\n// module chunks = 2","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/engine.io-client/build/esm/contrib/parseqs.js\n// module id = Kc3x\n// module chunks = 2","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/engine.io-client/build/esm/contrib/has-cors.js\n// module id = null\n// module chunks = ","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\nexport function createCookieJar() { }\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js\n// module id = null\n// module chunks = ","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { createCookieJar, XHR as XMLHttpRequest, } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false,\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n        if (this.opts.withCredentials) {\n            this.cookieJar = createCookieJar();\n        }\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, cookieJar: this.cookieJar }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    create() {\n        var _a;\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, true);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(xhr);\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/engine.io-client/build/esm/transports/polling.js\n// module id = null\n// module chunks = ","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nimport { WT } from \"./webtransport.js\";\nexport const transports = {\n    websocket: WS,\n    webtransport: WT,\n    polling: Polling,\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/engine.io-client/build/esm/transports/index.js\n// module id = null\n// module chunks = ","import { Transport } from \"../transport.js\";\nimport { nextTick } from \"./websocket-constructor.js\";\nimport { encodePacketToBinary, decodePacketFromBinary, } from \"engine.io-parser\";\nfunction shouldIncludeBinaryHeader(packet, encoded) {\n    // 48 === \"0\".charCodeAt(0) (OPEN packet type)\n    // 54 === \"6\".charCodeAt(0) (NOOP packet type)\n    return (packet.type === \"message\" &&\n        typeof packet.data !== \"string\" &&\n        encoded[0] >= 48 &&\n        encoded[0] <= 54);\n}\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        // @ts-ignore\n        if (typeof WebTransport !== \"function\") {\n            return;\n        }\n        // @ts-ignore\n        this.transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        this.transport.closed\n            .then(() => {\n            this.onClose();\n        })\n            .catch((err) => {\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this.transport.ready.then(() => {\n            this.transport.createBidirectionalStream().then((stream) => {\n                const reader = stream.readable.getReader();\n                this.writer = stream.writable.getWriter();\n                let binaryFlag;\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        if (!binaryFlag && value.byteLength === 1 && value[0] === 54) {\n                            binaryFlag = true;\n                        }\n                        else {\n                            // TODO expose binarytype\n                            this.onPacket(decodePacketFromBinary(value, binaryFlag, \"arraybuffer\"));\n                            binaryFlag = false;\n                        }\n                        read();\n                    })\n                        .catch((err) => {\n                    });\n                };\n                read();\n                const handshake = this.query.sid ? `0{\"sid\":\"${this.query.sid}\"}` : \"0\";\n                this.writer\n                    .write(new TextEncoder().encode(handshake))\n                    .then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacketToBinary(packet, (data) => {\n                if (shouldIncludeBinaryHeader(packet, data)) {\n                    this.writer.write(Uint8Array.of(54));\n                }\n                this.writer.write(data).then(() => {\n                    if (lastPacket) {\n                        nextTick(() => {\n                            this.writable = true;\n                            this.emitReserved(\"drain\");\n                        }, this.setTimeoutFn);\n                    }\n                });\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this.transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/engine.io-client/build/esm/transports/webtransport.js\n// module id = null\n// module chunks = ","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/engine.io-client/build/esm/contrib/parseuri.js\n// module id = null\n// module chunks = ","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts = {}) {\n        super();\n        this.writeBuffer = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\n            \"polling\",\n            \"websocket\",\n            \"webtransport\",\n        ];\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        }, this.opts.transportOptions[name]);\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", (reason) => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this.upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/engine.io-client/build/esm/socket.js\n// module id = null\n// module chunks = ","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\nexport { nextTick } from \"./transports/websocket-constructor.js\";\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/engine.io-client/build/esm/index.js\n// module id = null\n// module chunks = ","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/socket.io-parser/build/esm/is-binary.js\n// module id = null\n// module chunks = ","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/socket.io-parser/build/esm/binary.js\n// module id = null\n// module chunks = ","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */\nconst RESERVED_EVENTS = [\n    \"connect\",\n    \"connect_error\",\n    \"disconnect\",\n    \"disconnecting\",\n    \"newListener\",\n    \"removeListener\", // used by the Node.js EventEmitter\n];\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return isObject(payload);\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || isObject(payload);\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return (Array.isArray(payload) &&\n                    (typeof payload[0] === \"number\" ||\n                        (typeof payload[0] === \"string\" &&\n                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/socket.io-parser/build/esm/index.js\n// module id = null\n// module chunks = ","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/socket.io-client/build/esm/on.js\n// module id = null\n// module chunks = ","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        // the timeout flag is optional\n        const withErr = this.flags.timeout !== undefined || this._opts.ackTimeout !== undefined;\n        return new Promise((resolve, reject) => {\n            args.push((arg1, arg2) => {\n                if (withErr) {\n                    return arg1 ? reject(arg1) : resolve(arg2);\n                }\n                else {\n                    return resolve(arg1);\n                }\n            });\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/socket.io-client/build/esm/socket.js\n// module id = null\n// module chunks = ","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/socket.io-client/build/esm/contrib/backo2.js\n// module id = null\n// module chunks = ","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        const onError = (err) => {\n            this.cleanup();\n            this._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                this.maybeReconnectOnOpen();\n            }\n        };\n        // emit `error`\n        const errorSub = on(socket, \"error\", onError);\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                onError(new Error(\"timeout\"));\n                socket.close();\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/socket.io-client/build/esm/manager.js\n// module id = null\n// module chunks = ","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/socket.io-client/build/esm/index.js\n// module id = null\n// module chunks = ","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/socket.io-client/build/esm/url.js\n// module id = null\n// module chunks = ","<template>\r\n  <div class=\"container\">\r\n    <canvas id=\"canvas\"></canvas>\r\n    <div class=\"svg-container\" v-html=\"svgString\" />\r\n  </div>\r\n</template>\r\n<script>\r\nimport svgString from './config/svgString';\r\nimport { buildLightSystem, buildAuxSystem } from '@/utils';\r\nimport { io } from 'socket.io-client';\r\nexport default {\r\n    data() {\r\n        return {\r\n            scene: null, // 场景\r\n            camera: null, // 相机\r\n            renderer: null // 渲染器\r\n        };\r\n    },\r\n    computed: {\r\n    // svg字符串\r\n        svgString() {\r\n            return svgString;\r\n        }\r\n    },\r\n    methods: {\r\n    // 初始化\r\n        init() {\r\n            this.scene = new THREE.Scene();\r\n            this.camera = new THREE.PerspectiveCamera(\r\n                70,\r\n                window.innerWidth / window.innerHeight,\r\n                0.1,\r\n                1000\r\n            );\r\n            this.renderer = new THREE.WebGLRenderer({\r\n                canvas: document.querySelector('canvas')\r\n            });\r\n            this.renderer.setSize(window.innerWidth - 10, window.innerHeight - 10);\r\n        },\r\n        // 设置摄像机参数\r\n        setCamera() {\r\n            this.camera.position.set(10, 10, 10);\r\n            this.camera.lookAt(this.scene.position);\r\n        },\r\n        // 渲染\r\n        render() {\r\n            this.renderer.render(this.scene, this.camera);\r\n        },\r\n        addGeometry() {\r\n            const shape = new THREE.Shape();\r\n            shape.moveTo(0, 0);\r\n            shape.lineTo(0, 1);\r\n            shape.lineTo(1, 1);\r\n            shape.lineTo(1, 0);\r\n            shape.lineTo(0, 0);\r\n\r\n            const d =\r\n        'M8.7,2.4V2.2V2.2H8.6H6.3V2V2H6.2H3.7V1.8V1.8H3.6H1h0H0.9v0.1v3.1V5H1h8.2V3.1H8.7V2.4z M5.5,4L5.2,4.1H4.8l0-0.2l-0.3,0V3.3l0.6-0.1l0-0.1l0.4,0L5.5,4L5.5,4z';\r\n            const pathShape = transformSVGPathExposed(d);\r\n            const extrudeSettings = {\r\n                amount: 2,\r\n                bevelEnabled: false\r\n                // curveSegments: 1,\r\n                // depth: 1\r\n            };\r\n\r\n            const geometry = new THREE.ExtrudeGeometry(pathShape, extrudeSettings);\r\n            const material = new THREE.MeshPhongMaterial({ color: 0x156289 });\r\n            const mesh = new THREE.Mesh(geometry, material);\r\n            this.scene.add(mesh);\r\n        },\r\n        loop() {\r\n            requestAnimationFrame(this.loop);\r\n            this.render();\r\n        },\r\n        // 辅助控制系统\r\n        control() {\r\n            const canvas = document.querySelector('canvas');\r\n            let controls = new THREE.OrbitControls(this.camera, canvas);\r\n            controls.enableDamping = true;\r\n            controls.dampingFactor = 0.25;\r\n            controls.rotateSpeed = 0.35;\r\n        }\r\n    },\r\n    mounted() {\r\n        const socket = io('http://82.157.6.212:8090', {\r\n            reconnection: true,\r\n            transports: ['socket']\r\n        });\r\n        console.log(socket.connected); // socket是否与服务器连接\r\n        console.log(socket.disconnected); // socket是否与服务器断开连接\r\n        socket.open(); // 手动重连\r\n        socket.on('connect', () => {\r\n            console.log('connect: websocket 连接成功');\r\n        });\r\n        socket.on('news', (msg) => {\r\n            console.log(msg)\r\n        })\r\n        socket.on('error', (err) => {\r\n            console.log('socket 错误', err);\r\n        });\r\n        // this.init();\r\n        // this.control();\r\n        // this.setCamera();\r\n        // buildAuxSystem(this.scene);\r\n        // buildLightSystem(this.scene);\r\n        // this.addGeometry();\r\n        // this.loop();\r\n    }\r\n};\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.container {\r\n  // margin: 20px 0;\r\n  position: absolute;\r\n  text-align: center;\r\n  /*opacity: 0.2;*/\r\n  width: 100%;\r\n  background: black;\r\n}\r\n\r\n.svg-container {\r\n  position: absolute;\r\n  top: 10px;\r\n  left: 10px;\r\n  background: white;\r\n  width: 240px;\r\n  overflow: hidden;\r\n  border: 1px solid #f2f2f2;\r\n  overflow: hidden;\r\n  border-radius: 6px;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/pages/test/index.vue","const svgString = `\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<!-- Generator: Adobe Illustrator 22.1.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->\r\n<svg version=\"1.0\" id=\"图层_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 1920 1080\" enable-background=\"new 0 0 1920 1080\" xml:space=\"preserve\">\r\n    <path fill=\"#B5C1C7\" d=\"M1200.8,424.9v-23v-10h-10h-335v-20v-10h-10h-363v-17v-10h-10h-377h-0.5h-10v10v440v10h10h1165.6V517.7\r\n    h-60.1V424.9z M745.8,650.5l-38.1,10h-61.3l-6.9-29l-40.3,4.1v-85.1l91.9-19.6l4-7.2l50.8-1.3v128.1H745.8z\" />\r\n    <g>\r\n        <polygon fill=\"#B5C1C7\" points=\"1869.6,736.9 1868.6,449.9 1868.5,439.9 1858.6,439.9 1784.6,439.9 1776.6,439.9 1586.6,439.9 \r\n        1584.6,439.9 1584.6,434.9 1584.6,424.9 1574.6,424.9 1402.2,424.9 1386.6,424.9 1376.6,424.9 1369.7,424.9 1369.7,436.9 \r\n        1369.7,444 1369.7,794.9 1577.6,794.9 1587.6,794.9 1587.6,784.9 1587.6,746.9 1859.6,746.9 1869.6,746.9   \" />\r\n    </g>\r\n    <path fill=\"#E0E5E7\" d=\"M1190.8,414.9v-23v-10h-10h-335v-20v-10h-10h-363v-17v-10h-10h-377h-0.5h-10v10v440v10h10h1165.6V507.7\r\n    h-60.1V414.9z M735.8,640.5l-38.1,10h-61.3l-6.9-29l-40.3,4.1v-85.1l91.9-19.6l4-7.2l50.8-1.3v128.1H735.8z\" />\r\n    <g>\r\n        <polygon fill=\"#E0E5E7\" points=\"1859.6,726.9 1858.6,439.9 1858.5,429.9 1848.6,429.9 1774.6,429.9 1766.6,429.9 1576.6,429.9 \r\n        1574.6,429.9 1574.6,424.9 1574.6,414.9 1564.6,414.9 1392.2,414.9 1376.6,414.9 1366.6,414.9 1359.7,414.9 1359.7,426.9 \r\n        1359.7,434 1359.7,784.9 1567.6,784.9 1577.6,784.9 1577.6,774.9 1577.6,736.9 1849.6,736.9 1859.6,736.9   \" />\r\n    </g>\r\n    <rect x=\"1570.1\" y=\"438.7\" fill=\"#D5DEE2\" stroke=\"#FFFFFF\" stroke-miterlimit=\"10\" width=\"278.7\" height=\"288.9\" />\r\n    <rect x=\"327.5\" y=\"631\" fill=\"#D5DEE2\" stroke=\"#FFFFFF\" stroke-miterlimit=\"10\" width=\"61.8\" height=\"79.5\" />\r\n    <rect x=\"414\" y=\"631\" fill=\"#D5DEE2\" stroke=\"#FFFFFF\" stroke-miterlimit=\"10\" width=\"66.7\" height=\"79.5\" />\r\n    <rect x=\"859.1\" y=\"625.6\" fill=\"#D5DEE2\" stroke=\"#FFFFFF\" stroke-miterlimit=\"10\" width=\"57.4\" height=\"78.8\" />\r\n    <rect x=\"940.4\" y=\"625.6\" fill=\"#D5DEE2\" stroke=\"#FFFFFF\" stroke-miterlimit=\"10\" width=\"55.1\" height=\"78.8\" />\r\n    <g>\r\n        <text transform=\"matrix(1 0 0 1 345.6552 679.2)\" fill=\"#777777\" font-family=\"'AdobeSongStd-Light-GBpc-EUC-H'\" font-size=\"12px\">公寓</text>\r\n    </g>\r\n    <g>\r\n        <text transform=\"matrix(1 0 0 1 435.4451 679.1996)\" fill=\"#777777\" font-family=\"'AdobeSongStd-Light-GBpc-EUC-H'\" font-size=\"12px\">公寓</text>\r\n    </g>\r\n    <text transform=\"matrix(1 0 0 1 110.5014 379.2255)\" fill=\"#777777\" font-family=\"'AdobeSongStd-Light-GBpc-EUC-H'\" font-size=\"10px\">主入口</text>\r\n    <text transform=\"matrix(1 0 0 1 647.2894 403.1044)\" fill=\"#777777\" font-family=\"'AdobeSongStd-Light-GBpc-EUC-H'\" font-size=\"10px\">主入口</text>\r\n    <g>\r\n        <text transform=\"matrix(1 0 0 1 874.9634 671.5172)\" fill=\"#777777\" font-family=\"'AdobeSongStd-Light-GBpc-EUC-H'\" font-size=\"12px\">公寓</text>\r\n    </g>\r\n    <g>\r\n        <text transform=\"matrix(1 0 0 1 949.7236 671.5175)\" fill=\"#777777\" font-family=\"'AdobeSongStd-Light-GBpc-EUC-H'\" font-size=\"12px\">公寓</text>\r\n    </g>\r\n    <text transform=\"matrix(1 0 0 1 1694.1034 583.1547)\" fill=\"#777777\" font-family=\"'AdobeSongStd-Light-GBpc-EUC-H'\" font-size=\"12px\">写字楼</text>\r\n    <g>\r\n        <polygon fill=\"#ABD0EF\" stroke=\"#FFFFFF\" stroke-miterlimit=\"10\" points=\"214.6,449.5 188.1,449.5 172.6,374 214.6,374     \" />\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 176.1987 399.1045)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">#L1-103</text>\r\n        </g>\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 175.8867 417.9482)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">45.07m²</text>\r\n        </g>\r\n    </g>\r\n    <g>\r\n        <rect x=\"277.1\" y=\"370\" fill=\"#ABD0EF\" stroke=\"#FFFFFF\" stroke-miterlimit=\"10\" width=\"68.5\" height=\"79.5\" />\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 293.9458 400.2051)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">#L1-104</text>\r\n        </g>\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 290.7822 419.0488)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">104.78m²</text>\r\n        </g>\r\n    </g>\r\n    <g>\r\n        <rect x=\"361.8\" y=\"370\" fill=\"#ABD0EF\" stroke=\"#FFFFFF\" stroke-miterlimit=\"10\" width=\"98.3\" height=\"79.5\" />\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 392.1519 400.2051)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">#L1-105</text>\r\n        </g>\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 388.8691 419.0488)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">144.86m²</text>\r\n        </g>\r\n    </g>\r\n    <g>\r\n        <rect x=\"383.8\" y=\"480.7\" fill=\"#ABD0EF\" stroke=\"#FFFFFF\" stroke-miterlimit=\"10\" width=\"79\" height=\"58.3\" />\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 408.9229 505.1094)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">#LW1-2</text>\r\n        </g>\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 407.2432 523.9541)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">77.99m²</text>\r\n        </g>\r\n    </g>\r\n    <g>\r\n        <polygon fill=\"#ABD0EF\" stroke=\"#FFFFFF\" stroke-miterlimit=\"10\" points=\"462.8,539 547.5,539 629.5,522.4 629.5,480.7 \r\n        462.8,480.7     \" />\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 499.874 505.1094)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">#LW1-3</text>\r\n        </g>\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 495.2246 523.9541)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">166.35m²</text>\r\n        </g>\r\n    </g>\r\n    <g>\r\n        <rect x=\"540.5\" y=\"370.7\" fill=\"#ABD0EF\" stroke=\"#FFFFFF\" stroke-miterlimit=\"10\" width=\"82.6\" height=\"78.9\" />\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 569.1523 400.2051)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">#L1-107</text>\r\n        </g>\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 559.8691 419.0488)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">118.22m²</text>\r\n        </g>\r\n    </g>\r\n    <g>\r\n        <polygon fill=\"#ABD0EF\" stroke=\"#FFFFFF\" stroke-miterlimit=\"10\" points=\"757.4,389 757.4,370 742.3,370 718.7,370 704.5,370 \r\n        704.5,418.3 704.5,422.8 704.5,471 757.4,471 757.4,418.3 742.3,418.3 742.3,389   \" />\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 715.6133 435.5361)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">#L1-108</text>\r\n        </g>\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 709.3008 454.3799)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">86.00m²</text>\r\n        </g>\r\n    </g>\r\n    <g>\r\n        <rect x=\"876.5\" y=\"397\" fill=\"#ABD0EF\" stroke=\"#FFFFFF\" stroke-miterlimit=\"10\" width=\"122.7\" height=\"74\" />\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 916.2832 431.9766)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">#L1-109</text>\r\n        </g>\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 914 450.8203)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">159.29m²</text>\r\n        </g>\r\n    </g>\r\n    <g>\r\n        <polygon fill=\"#ABD0EF\" stroke=\"#FFFFFF\" stroke-miterlimit=\"10\" points=\"1072.9,479 1072.9,489 1052.1,489 1052.1,516 1072.9,516 \r\n        1108.4,516 1129.2,516 1129.2,479    \" />\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 1080.1855 492.832)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">#L1-110</text>\r\n        </g>\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 1073.873 511.6768)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">47.28m²</text>\r\n        </g>\r\n    </g>\r\n    <g>\r\n        <polygon fill=\"#ABD0EF\" stroke=\"#FFFFFF\" stroke-miterlimit=\"10\" points=\"1014.9,537 1014.9,500 959.9,500 926,500 876.5,500 \r\n        876.5,537   \" />\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 928.9209 517.0322)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">#LW1-5</text>\r\n        </g>\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 927.2422 530.876)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">92.56m²</text>\r\n        </g>\r\n    </g>\r\n    <g>\r\n        <polygon fill=\"#ABD0EF\" stroke=\"#FFFFFF\" stroke-miterlimit=\"10\" points=\"858.4,537 858.4,500 824.2,500 803.1,500 772.4,500 \r\n        772.4,537   \" />\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 798.6094 517.0322)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">#LW1-4</text>\r\n        </g>\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 797.0498 530.876)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">55.37m²</text>\r\n        </g>\r\n    </g>\r\n    <g>\r\n        <polygon fill=\"#ABD0EF\" stroke=\"#FFFFFF\" stroke-miterlimit=\"10\" points=\"1148.7,497.5 1148.7,479 1129.2,479 1129.2,497.5 \r\n        1129.2,502.5 1129.2,516 1139.7,516 1157.6,516 1168.1,516 1168.1,497.5   \" />\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 1135.0713 494.1621)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">#L1-111</text>\r\n        </g>\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 1135.0713 513.0059)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">19.85m²</text>\r\n        </g>\r\n    </g>\r\n    <g>\r\n        <polygon fill=\"#ABD0EF\" stroke=\"#FFFFFF\" stroke-miterlimit=\"10\" points=\"540.5,388.7 540.5,370.7 474.7,370.7 474.7,388.7 \r\n        460.1,388.7 460.1,418.7 460.1,419.5 460.1,449.5 540.5,449.5 540.5,418.7 522.1,418.7 522.1,388.7     \" />\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 473.4941 414.7939)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">#L1-106</text>\r\n        </g>\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 473.1816 433.6377)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">99.10m²</text>\r\n        </g>\r\n    </g>\r\n    <g>\r\n        <polygon fill=\"#ABD0EF\" stroke=\"#FFFFFF\" stroke-miterlimit=\"10\" points=\"170.1,559.2 147.8,440.4 89.3,440.4 89.3,537 113.6,537 \r\n        113.6,597.2 154.8,597.2 154.8,559.2     \" />\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 102.9189 490.0723)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">#L1-102</text>\r\n        </g>\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 99.6367 508.916)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">170.97m²</text>\r\n        </g>\r\n    </g>\r\n    <g>\r\n        <polygon fill=\"#ABD0EF\" stroke=\"#FFFFFF\" stroke-miterlimit=\"10\" points=\"252.1,559.2 154.8,559.2 154.8,664 139.6,664 \r\n        139.6,697.7 89.3,697.7 89.3,774.4 223.5,774.4 223.5,737 252.1,737   \" />\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 181.0518 663.5635)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">#L1-101</text>\r\n        </g>\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 178.7695 682.4072)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">472.14m²</text>\r\n        </g>\r\n    </g>\r\n    <g>\r\n        <polygon fill=\"#ABD0EF\" stroke=\"#FFFFFF\" stroke-miterlimit=\"10\" points=\"190.8,480.7 202.8,524 271.5,524 271.5,496.7 \r\n        339.8,496.7 339.8,480.7     \" />\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 217.2505 498.1309)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">#LW1-1</text>\r\n        </g>\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 215.5713 516.9756)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">84.51m²</text>\r\n        </g>\r\n    </g>\r\n    <g>\r\n        <polygon fill=\"#ABD0EF\" stroke=\"#FFFFFF\" stroke-miterlimit=\"10\" points=\"334,559.2 289,559.2 276.5,559.2 276.5,565.9 289,565.9 \r\n        289,631 346.4,631 346.4,559.2   \" />\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 299.5498 587.8301)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">#L1-127</text>\r\n        </g>\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 299.2378 606.6738)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">74.98m²</text>\r\n        </g>\r\n    </g>\r\n    <g>\r\n        <polygon fill=\"#ABD0EF\" stroke=\"#FFFFFF\" stroke-miterlimit=\"10\" points=\"465.8,559.2 465.8,631 536.8,631 536.8,640.5 \r\n        560.4,640.5 560.4,631 560.4,568.7 560.4,559.2   \" />\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 490.6572 587.8301)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">#L1-123</text>\r\n        </g>\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 488.375 606.6738)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">121.20m²</text>\r\n        </g>\r\n    </g>\r\n    <g>\r\n        <rect x=\"426.8\" y=\"559.2\" fill=\"#ABD0EF\" stroke=\"#FFFFFF\" stroke-miterlimit=\"10\" width=\"39\" height=\"61.2\" />\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 428.8486 587.8301)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">#L1-124</text>\r\n        </g>\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 428.6553 606.6748)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">42.70m²</text>\r\n        </g>\r\n    </g>\r\n    <g>\r\n        <rect x=\"346.8\" y=\"559.2\" fill=\"#ABD0EF\" stroke=\"#FFFFFF\" stroke-miterlimit=\"10\" width=\"42.5\" height=\"76.1\" />\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 351.5854 587.7881)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">#L1-126</text>\r\n        </g>\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 351.2734 606.6328)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">59.05m²</text>\r\n        </g>\r\n    </g>\r\n    <g>\r\n        <rect x=\"389.3\" y=\"559.2\" fill=\"#ABD0EF\" stroke=\"#FFFFFF\" stroke-miterlimit=\"10\" width=\"37.5\" height=\"61.2\" />\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 391.6338 587.7881)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">#L1-125</text>\r\n        </g>\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 391.3213 606.6328)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">38.49m²</text>\r\n        </g>\r\n    </g>\r\n    <g>\r\n        <polygon fill=\"#ABD0EF\" stroke=\"#FFFFFF\" stroke-miterlimit=\"10\" points=\"560.4,680.3 560.4,727.5 571.5,727.5 571.5,735.3 \r\n        591.5,735.3 591.5,774.8 617.9,774.8 617.9,727.5 617.9,719.8 617.9,680.3     \" />\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 574.4404 703.6895)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">#L1-122</text>\r\n        </g>\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 572.1279 722.5332)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">76.97m²</text>\r\n        </g>\r\n    </g>\r\n    <g>\r\n        <polygon fill=\"#ABD0EF\" stroke=\"#FFFFFF\" stroke-miterlimit=\"10\" points=\"765.6,680.3 705.9,680.3 705.9,708.3 705.9,724.5 \r\n        705.9,774.8 726.7,774.8 726.7,735.8 745.3,735.8 745.3,724.5 765.6,724.5     \" />\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 717.6338 703.1221)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">#L1-120</text>\r\n        </g>\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 716.3213 721.9658)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">68.56m²</text>\r\n        </g>\r\n    </g>\r\n    <g>\r\n        <rect x=\"617.9\" y=\"680.3\" fill=\"#ABD0EF\" stroke=\"#FFFFFF\" stroke-miterlimit=\"10\" width=\"88\" height=\"94.5\" />\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 643.4053 703.1221)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">#L1-121</text>\r\n        </g>\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 641.123 721.9658)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">149.87m²</text>\r\n        </g>\r\n    </g>\r\n    <g>\r\n        <polygon fill=\"#ABD0EF\" stroke=\"#FFFFFF\" stroke-miterlimit=\"10\" points=\"824.7,557.5 803.4,557.5 772.4,557.5 772.4,603.4 \r\n        803.4,603.4 803.4,634.9 859.1,634.9 859.1,557.5     \" />\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 798.667 577.1289)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">#L1-118</text>\r\n        </g>\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 794.3848 595.9727)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">100.52m²</text>\r\n        </g>\r\n    </g>\r\n    <g>\r\n        <polygon fill=\"#ABD0EF\" stroke=\"#FFFFFF\" stroke-miterlimit=\"10\" points=\"803.1,680.3 781.9,680.3 772.4,641.7 803.1,641.7     \" />\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 778.4727 655.5576)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">#L1-119</text>\r\n        </g>\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 775.6885 674.4023)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">16.35m²</text>\r\n        </g>\r\n    </g>\r\n    <g>\r\n        <rect x=\"859.1\" y=\"557.5\" fill=\"#ABD0EF\" stroke=\"#FFFFFF\" stroke-miterlimit=\"10\" width=\"46.8\" height=\"62\" />\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 864.8291 577.1289)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">#L1-117</text>\r\n        </g>\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 863.5176 595.9727)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">48.72m²</text>\r\n        </g>\r\n    </g>\r\n    <g>\r\n        <rect x=\"940.4\" y=\"557.5\" fill=\"#ABD0EF\" stroke=\"#FFFFFF\" stroke-miterlimit=\"10\" width=\"54.9\" height=\"68\" />\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 950.5254 577.1279)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">#L1-115</text>\r\n        </g>\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 949.2129 595.9727)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">62.32m²</text>\r\n        </g>\r\n    </g>\r\n    <g>\r\n        <rect x=\"906.4\" y=\"557.5\" fill=\"#ABD0EF\" stroke=\"#FFFFFF\" stroke-miterlimit=\"10\" width=\"34\" height=\"62\" />\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 907.5166 577.1289)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">#L1-116</text>\r\n        </g>\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 906.2041 595.9736)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">36.55m²</text>\r\n        </g>\r\n    </g>\r\n    <g>\r\n        <rect x=\"1051\" y=\"557.5\" fill=\"#ABD0EF\" stroke=\"#FFFFFF\" stroke-miterlimit=\"10\" width=\"78.1\" height=\"73.5\" />\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 1064.3896 592.1523)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">#L1-113</text>\r\n        </g>\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 1062.1084 610.9971)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">105.80m²</text>\r\n        </g>\r\n    </g>\r\n    <g>\r\n        <rect x=\"1129.1\" y=\"557.5\" fill=\"#ABD0EF\" stroke=\"#FFFFFF\" stroke-miterlimit=\"10\" width=\"111.4\" height=\"113.5\" />\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 1164.7764 612.0801)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">#L1-112</text>\r\n        </g>\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 1163.4951 630.9238)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">237.05m²</text>\r\n        </g>\r\n    </g>\r\n    <g>\r\n        <polygon fill=\"#ABD0EF\" stroke=\"#FFFFFF\" stroke-miterlimit=\"10\" points=\"1438.6,567.4 1435.2,567.4 1368.7,567.4 1368.7,628.4 \r\n        1426.5,628.4 1426.5,647.2 1435.2,647.2 1438.6,647.2 1510.3,647.2 1510.3,567.4   \" />\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 1436.2295 598.5752)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">#L1-129</text>\r\n        </g>\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 1433.9473 617.4189)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">172.64m²</text>\r\n        </g>\r\n    </g>\r\n    <g>\r\n        <polygon fill=\"#ABD0EF\" stroke=\"#FFFFFF\" stroke-miterlimit=\"10\" points=\"1438.4,532.7 1438.4,508.5 1368.9,508.5 1368.9,567.4 \r\n        1427.3,567.4 1438.4,567.4 1501.5,567.4 1501.5,532.7     \" />\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 1384.0068 537.0439)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">#L1-130</text>\r\n        </g>\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 1381.7246 555.8877)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">112.00m²</text>\r\n        </g>\r\n    </g>\r\n    <g>\r\n        <rect x=\"1438.4\" y=\"424.8\" fill=\"#ABD0EF\" stroke=\"#FFFFFF\" stroke-miterlimit=\"10\" width=\"63.1\" height=\"107.9\" />\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 1450.2363 471.6104)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">#L1-132</text>\r\n        </g>\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 1447.9541 490.4551)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">109.06m²</text>\r\n        </g>\r\n    </g>\r\n    <g>\r\n        <rect id=\"id_x3D_909090\" x=\"1368.9\" y=\"424.8\" fill=\"#ABD0EF\" stroke=\"#FFFFFF\" stroke-miterlimit=\"10\" width=\"69.5\" height=\"83.8\" />\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 1385.748 461.3145)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">#L1-131</text>\r\n        </g>\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 1385.4355 480.1592)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">92.67m²</text>\r\n        </g>\r\n    </g>\r\n    <g>\r\n        <rect x=\"1781.1\" y=\"655.4\" fill=\"#ABD0EF\" stroke=\"#FFFFFF\" stroke-miterlimit=\"10\" width=\"67.7\" height=\"72\" />\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 1798.7441 684.5518)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">#L1-133</text>\r\n        </g>\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 1797.4326 703.3965)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">90.00m²</text>\r\n        </g>\r\n    </g>\r\n    <g>\r\n        <rect x=\"1368.7\" y=\"628.4\" fill=\"#ABD0EF\" stroke=\"#FFFFFF\" stroke-miterlimit=\"10\" width=\"57.7\" height=\"30.6\" />\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 1378.667 642.1934)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">#L1-128</text>\r\n        </g>\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 1378.3545 655.0371)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">27.88m²</text>\r\n        </g>\r\n    </g>\r\n    <g>\r\n        <polygon fill=\"#ABD0EF\" stroke=\"#FFFFFF\" stroke-miterlimit=\"10\" points=\"1051,557.5 995.5,557.5 995.5,585.5 995.5,631 \r\n        995.5,641.5 982.9,641.5 982.9,685.5 995.5,685.5 995.5,659 1036,659 1036,631 1051,631    \" />\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 1003.6221 594.7871)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">#L1-114</text>\r\n        </g>\r\n        <g>\r\n            <text transform=\"matrix(0.9 0 0 1 1000.459 613.6318)\" fill=\"#777777\" font-family=\"'ArialMT'\" font-size=\"12px\">102.05m²</text>\r\n        </g>\r\n    </g>\r\n    <g>\r\n        <path fill=\"#8073B1\" d=\"M1395.7,737.9c0,5.5,4.5,10,10,10s10-4.5,10-10s-4.5-10-10-10S1395.7,732.4,1395.7,737.9z\" />\r\n        <g>\r\n            <g>\r\n                <path fill=\"#FFFFFF\" d=\"M1407.4,731.2c-0.7,0.4-0.9,1.2-0.5,1.9s1.2,0.9,1.9,0.5c0.7-0.4,0.9-1.2,0.5-1.9\r\n                S1408.1,730.8,1407.4,731.2L1407.4,731.2z\" />\r\n                <path fill=\"#FFFFFF\" d=\"M1407.9,739.2l0.6,3c0.1,0.6,1,0.5,1-0.4l0.1-6.4c0-2-2.6-1.7-2.4,0v0.3l-1.5,0.4c-0.7,0.2-0.7,1,0.1,1\r\n                l1.5-0.1v0.5h-0.7c-0.6,0-1,0.1-1,0.8l-0.2,2.4c0,0.7,0.9,0.6,1.1-0.1l0.4-1.4H1407.9L1407.9,739.2z\" />\r\n            </g>\r\n            <path fill=\"#FFFFFF\" d=\"M1402.2,740.4h-4.3c-0.3,0-0.5-0.2-0.5-0.5v-1.2c0-0.3,0.2-0.5,0.5-0.5h4.3c0.3,0,0.5,0.2,0.5,0.5v1.2\r\n            C1402.7,740.2,1402.4,740.4,1402.2,740.4z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M1404.4,742.2h-3c-0.3,0-0.5-0.2-0.5-0.5v-1.2c0-0.3,0.2-0.5,0.5-0.5h3c0.3,0,0.5,0.2,0.5,0.5v1.2\r\n            C1404.8,742,1404.6,742.2,1404.4,742.2z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M1407.4,743.5h-3c-0.3,0-0.5-0.2-0.5-0.5v-1.2c0-0.3,0.2-0.5,0.5-0.5h3c0.3,0,0.5,0.2,0.5,0.5v1.2\r\n            C1407.9,743.3,1407.7,743.5,1407.4,743.5z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M1411.7,744.8h-4.3c-0.3,0-0.5-0.2-0.5-0.5v-1.2c0-0.3,0.2-0.5,0.5-0.5h4.3c0.3,0,0.5,0.2,0.5,0.5v1.2\r\n            C1412.2,744.6,1412,744.8,1411.7,744.8z\" />\r\n        </g>\r\n    </g>\r\n    <g>\r\n        <path fill=\"#8073B1\" d=\"M1129.2,418.4c0,5.5,4.5,10,10,10s10-4.5,10-10s-4.5-10-10-10S1129.2,412.9,1129.2,418.4z\" />\r\n        <g>\r\n            <g>\r\n                <path fill=\"#FFFFFF\" d=\"M1140.9,411.7c-0.7,0.4-0.9,1.2-0.5,1.9s1.2,0.9,1.9,0.5c0.7-0.4,0.9-1.2,0.5-1.9\r\n                S1141.6,411.3,1140.9,411.7L1140.9,411.7z\" />\r\n                <path fill=\"#FFFFFF\" d=\"M1141.4,419.7l0.6,3c0.1,0.6,1,0.5,1-0.4l0.1-6.4c0-2-2.6-1.7-2.4,0v0.3l-1.5,0.4c-0.7,0.2-0.7,1,0.1,1\r\n                l1.5-0.1v0.5h-0.7c-0.6,0-1,0.1-1,0.8l-0.2,2.4c0,0.7,0.9,0.6,1.1-0.1l0.4-1.4L1141.4,419.7L1141.4,419.7z\" />\r\n            </g>\r\n            <path fill=\"#FFFFFF\" d=\"M1135.7,420.9h-4.3c-0.3,0-0.5-0.2-0.5-0.5v-1.2c0-0.3,0.2-0.5,0.5-0.5h4.3c0.3,0,0.5,0.2,0.5,0.5v1.2\r\n            C1136.2,420.7,1135.9,420.9,1135.7,420.9z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M1137.9,422.7h-3c-0.3,0-0.5-0.2-0.5-0.5V421c0-0.3,0.2-0.5,0.5-0.5h3c0.3,0,0.5,0.2,0.5,0.5v1.2\r\n            C1138.3,422.5,1138.1,422.7,1137.9,422.7z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M1140.9,424h-3c-0.3,0-0.5-0.2-0.5-0.5v-1.2c0-0.3,0.2-0.5,0.5-0.5h3c0.3,0,0.5,0.2,0.5,0.5v1.2\r\n            C1141.4,423.8,1141.2,424,1140.9,424z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M1145.2,425.3h-4.3c-0.3,0-0.5-0.2-0.5-0.5v-1.2c0-0.3,0.2-0.5,0.5-0.5h4.3c0.3,0,0.5,0.2,0.5,0.5v1.2\r\n            C1145.7,425.1,1145.5,425.3,1145.2,425.3z\" />\r\n        </g>\r\n    </g>\r\n    <g>\r\n        <path fill=\"#8073B1\" d=\"M1154.8,696.4c0,5.5,4.5,10,10,10s10-4.5,10-10s-4.5-10-10-10S1154.8,690.9,1154.8,696.4z\" />\r\n        <g>\r\n            <g>\r\n                <path fill=\"#FFFFFF\" d=\"M1166.5,689.7c-0.7,0.4-0.9,1.2-0.5,1.9s1.2,0.9,1.9,0.5c0.7-0.4,0.9-1.2,0.5-1.9\r\n                S1167.2,689.3,1166.5,689.7L1166.5,689.7z\" />\r\n                <path fill=\"#FFFFFF\" d=\"M1167,697.7l0.6,3c0.1,0.6,1,0.5,1-0.4l0.1-6.4c0-2-2.6-1.7-2.4,0v0.3l-1.5,0.4c-0.7,0.2-0.7,1,0.1,1\r\n                l1.5-0.1v0.5h-0.7c-0.6,0-1,0.1-1,0.8l-0.2,2.4c0,0.7,0.9,0.6,1.1-0.1l0.4-1.4H1167L1167,697.7z\" />\r\n            </g>\r\n            <path fill=\"#FFFFFF\" d=\"M1161.3,698.9h-4.3c-0.3,0-0.5-0.2-0.5-0.5v-1.2c0-0.3,0.2-0.5,0.5-0.5h4.3c0.3,0,0.5,0.2,0.5,0.5v1.2\r\n            C1161.8,698.7,1161.5,698.9,1161.3,698.9z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M1163.5,700.7h-3c-0.3,0-0.5-0.2-0.5-0.5V699c0-0.3,0.2-0.5,0.5-0.5h3c0.3,0,0.5,0.2,0.5,0.5v1.2\r\n            C1163.9,700.5,1163.7,700.7,1163.5,700.7z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M1166.5,702h-3c-0.3,0-0.5-0.2-0.5-0.5v-1.2c0-0.3,0.2-0.5,0.5-0.5h3c0.3,0,0.5,0.2,0.5,0.5v1.2\r\n            C1167,701.8,1166.8,702,1166.5,702z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M1170.8,703.3h-4.3c-0.3,0-0.5-0.2-0.5-0.5v-1.2c0-0.3,0.2-0.5,0.5-0.5h4.3c0.3,0,0.5,0.2,0.5,0.5v1.2\r\n            C1171.3,703.1,1171.1,703.3,1170.8,703.3z\" />\r\n        </g>\r\n    </g>\r\n    <g>\r\n        <path fill=\"#8073B1\" d=\"M990.5,733.3c0,5.5,4.5,10,10,10s10-4.5,10-10s-4.5-10-10-10S990.5,727.8,990.5,733.3z\" />\r\n        <g>\r\n            <g>\r\n                <path fill=\"#FFFFFF\" d=\"M1002.2,726.6c-0.7,0.4-0.9,1.2-0.5,1.9s1.2,0.9,1.9,0.5s0.9-1.2,0.5-1.9S1002.9,726.2,1002.2,726.6\r\n                L1002.2,726.6z\" />\r\n                <path fill=\"#FFFFFF\" d=\"M1002.7,734.6l0.6,3c0.1,0.6,1,0.5,1-0.4l0.1-6.4c0-2-2.6-1.7-2.4,0v0.3l-1.5,0.4c-0.7,0.2-0.7,1,0.1,1\r\n                l1.5-0.1v0.5h-0.7c-0.6,0-1,0.1-1,0.8l-0.2,2.4c0,0.7,0.9,0.6,1.1-0.1l0.4-1.4H1002.7L1002.7,734.6z\" />\r\n            </g>\r\n            <path fill=\"#FFFFFF\" d=\"M997,735.8h-4.3c-0.3,0-0.5-0.2-0.5-0.5v-1.2c0-0.3,0.2-0.5,0.5-0.5h4.3c0.3,0,0.5,0.2,0.5,0.5v1.2\r\n            C997.5,735.6,997.2,735.8,997,735.8z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M999.2,737.6h-3c-0.3,0-0.5-0.2-0.5-0.5v-1.2c0-0.3,0.2-0.5,0.5-0.5h3c0.3,0,0.5,0.2,0.5,0.5v1.2\r\n            C999.6,737.4,999.4,737.6,999.2,737.6z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M1002.2,738.9h-3c-0.3,0-0.5-0.2-0.5-0.5v-1.2c0-0.3,0.2-0.5,0.5-0.5h3c0.3,0,0.5,0.2,0.5,0.5v1.2\r\n            C1002.7,738.7,1002.5,738.9,1002.2,738.9z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M1006.5,740.2h-4.3c-0.3,0-0.5-0.2-0.5-0.5v-1.2c0-0.3,0.2-0.5,0.5-0.5h4.3c0.3,0,0.5,0.2,0.5,0.5v1.2\r\n            C1007,740,1006.8,740.2,1006.5,740.2z\" />\r\n        </g>\r\n    </g>\r\n    <g>\r\n        <path fill=\"#8073B1\" d=\"M815.4,407.8c0,5.5,4.5,10,10,10s10-4.5,10-10s-4.5-10-10-10S815.4,402.3,815.4,407.8z\" />\r\n        <g>\r\n            <g>\r\n                <path fill=\"#FFFFFF\" d=\"M827.1,401.1c-0.7,0.4-0.9,1.2-0.5,1.9s1.2,0.9,1.9,0.5s0.9-1.2,0.5-1.9S827.8,400.7,827.1,401.1\r\n                L827.1,401.1z\" />\r\n                <path fill=\"#FFFFFF\" d=\"M827.6,409.1l0.6,3c0.1,0.6,1,0.5,1-0.4l0.1-6.4c0-2-2.6-1.7-2.4,0v0.3l-1.5,0.4c-0.7,0.2-0.7,1,0.1,1\r\n                l1.5-0.1v0.5h-0.7c-0.6,0-1,0.1-1,0.8l-0.2,2.4c0,0.7,0.9,0.6,1.1-0.1l0.4-1.4L827.6,409.1L827.6,409.1z\" />\r\n            </g>\r\n            <path fill=\"#FFFFFF\" d=\"M821.9,410.3h-4.3c-0.3,0-0.5-0.2-0.5-0.5v-1.2c0-0.3,0.2-0.5,0.5-0.5h4.3c0.3,0,0.5,0.2,0.5,0.5v1.2\r\n            C822.4,410.1,822.1,410.3,821.9,410.3z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M824.1,412.1h-3c-0.3,0-0.5-0.2-0.5-0.5v-1.2c0-0.3,0.2-0.5,0.5-0.5h3c0.3,0,0.5,0.2,0.5,0.5v1.2\r\n            C824.5,411.9,824.3,412.1,824.1,412.1z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M827.1,413.4h-3c-0.3,0-0.5-0.2-0.5-0.5v-1.2c0-0.3,0.2-0.5,0.5-0.5h3c0.3,0,0.5,0.2,0.5,0.5v1.2\r\n            C827.6,413.2,827.4,413.4,827.1,413.4z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M831.4,414.7h-4.3c-0.3,0-0.5-0.2-0.5-0.5V413c0-0.3,0.2-0.5,0.5-0.5h4.3c0.3,0,0.5,0.2,0.5,0.5v1.2\r\n            C831.9,414.5,831.7,414.7,831.4,414.7z\" />\r\n        </g>\r\n    </g>\r\n    <g>\r\n        <path fill=\"#8073B1\" d=\"M485.2,735.8c0,5.5,4.5,10,10,10s10-4.5,10-10s-4.5-10-10-10S485.2,730.3,485.2,735.8z\" />\r\n        <g>\r\n            <g>\r\n                <path fill=\"#FFFFFF\" d=\"M496.9,729.1c-0.7,0.4-0.9,1.2-0.5,1.9s1.2,0.9,1.9,0.5c0.7-0.4,0.9-1.2,0.5-1.9S497.6,728.7,496.9,729.1\r\n                L496.9,729.1z\" />\r\n                <path fill=\"#FFFFFF\" d=\"M497.4,737.1l0.6,3c0.1,0.6,1,0.5,1-0.4l0.1-6.4c0-2-2.6-1.7-2.4,0v0.3l-1.5,0.4c-0.7,0.2-0.7,1,0.1,1\r\n                l1.5-0.1v0.5h-0.7c-0.6,0-1,0.1-1,0.8l-0.2,2.4c0,0.7,0.9,0.6,1.1-0.1l0.4-1.4H497.4L497.4,737.1z\" />\r\n            </g>\r\n            <path fill=\"#FFFFFF\" d=\"M491.7,738.3h-4.3c-0.3,0-0.5-0.2-0.5-0.5v-1.2c0-0.3,0.2-0.5,0.5-0.5h4.3c0.3,0,0.5,0.2,0.5,0.5v1.2\r\n            C492.2,738.1,491.9,738.3,491.7,738.3z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M493.9,740.1h-3c-0.3,0-0.5-0.2-0.5-0.5v-1.2c0-0.3,0.2-0.5,0.5-0.5h3c0.3,0,0.5,0.2,0.5,0.5v1.2\r\n            C494.3,739.9,494.1,740.1,493.9,740.1z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M496.9,741.4h-3c-0.3,0-0.5-0.2-0.5-0.5v-1.2c0-0.3,0.2-0.5,0.5-0.5h3c0.3,0,0.5,0.2,0.5,0.5v1.2\r\n            C497.4,741.2,497.2,741.4,496.9,741.4z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M501.2,742.7h-4.3c-0.3,0-0.5-0.2-0.5-0.5V741c0-0.3,0.2-0.5,0.5-0.5h4.3c0.3,0,0.5,0.2,0.5,0.5v1.2\r\n            C501.7,742.5,501.5,742.7,501.2,742.7z\" />\r\n        </g>\r\n    </g>\r\n    <g>\r\n        <path fill=\"#8073B1\" d=\"M309.4,735.8c0,5.5,4.5,10,10,10s10-4.5,10-10s-4.5-10-10-10S309.4,730.3,309.4,735.8z\" />\r\n        <g>\r\n            <g>\r\n                <path fill=\"#FFFFFF\" d=\"M321.1,729.1c-0.7,0.4-0.9,1.2-0.5,1.9s1.2,0.9,1.9,0.5c0.7-0.4,0.9-1.2,0.5-1.9S321.8,728.7,321.1,729.1\r\n                L321.1,729.1z\" />\r\n                <path fill=\"#FFFFFF\" d=\"M321.6,737.1l0.6,3c0.1,0.6,1,0.5,1-0.4l0.1-6.4c0-2-2.6-1.7-2.4,0v0.3l-1.5,0.4c-0.7,0.2-0.7,1,0.1,1\r\n                l1.5-0.1v0.5h-0.7c-0.6,0-1,0.1-1,0.8l-0.2,2.4c0,0.7,0.9,0.6,1.1-0.1l0.4-1.4H321.6L321.6,737.1z\" />\r\n            </g>\r\n            <path fill=\"#FFFFFF\" d=\"M315.9,738.3h-4.3c-0.3,0-0.5-0.2-0.5-0.5v-1.2c0-0.3,0.2-0.5,0.5-0.5h4.3c0.3,0,0.5,0.2,0.5,0.5v1.2\r\n            C316.4,738.1,316.1,738.3,315.9,738.3z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M318.1,740.1h-3c-0.3,0-0.5-0.2-0.5-0.5v-1.2c0-0.3,0.2-0.5,0.5-0.5h3c0.3,0,0.5,0.2,0.5,0.5v1.2\r\n            C318.5,739.9,318.3,740.1,318.1,740.1z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M321.1,741.4h-3c-0.3,0-0.5-0.2-0.5-0.5v-1.2c0-0.3,0.2-0.5,0.5-0.5h3c0.3,0,0.5,0.2,0.5,0.5v1.2\r\n            C321.6,741.2,321.4,741.4,321.1,741.4z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M325.4,742.7h-4.3c-0.3,0-0.5-0.2-0.5-0.5V741c0-0.3,0.2-0.5,0.5-0.5h4.3c0.3,0,0.5,0.2,0.5,0.5v1.2\r\n            C325.9,742.5,325.7,742.7,325.4,742.7z\" />\r\n        </g>\r\n    </g>\r\n    <g>\r\n        <path fill=\"#8073B1\" d=\"M100.5,631c0,5.5,4.5,10,10,10s10-4.5,10-10s-4.5-10-10-10S100.5,625.5,100.5,631z\" />\r\n        <g>\r\n            <g>\r\n                <path fill=\"#FFFFFF\" d=\"M112.2,624.3c-0.7,0.4-0.9,1.2-0.5,1.9s1.2,0.9,1.9,0.5c0.7-0.4,0.9-1.2,0.5-1.9S112.9,623.9,112.2,624.3\r\n                L112.2,624.3z\" />\r\n                <path fill=\"#FFFFFF\" d=\"M112.7,632.3l0.6,3c0.1,0.6,1,0.5,1-0.4l0.1-6.4c0-2-2.6-1.7-2.4,0v0.3l-1.5,0.4c-0.7,0.2-0.7,1,0.1,1\r\n                l1.5-0.1v0.5h-0.7c-0.6,0-1,0.1-1,0.8l-0.2,2.4c0,0.7,0.9,0.6,1.1-0.1l0.4-1.4H112.7L112.7,632.3z\" />\r\n            </g>\r\n            <path fill=\"#FFFFFF\" d=\"M107,633.5h-4.3c-0.3,0-0.5-0.2-0.5-0.5v-1.2c0-0.3,0.2-0.5,0.5-0.5h4.3c0.3,0,0.5,0.2,0.5,0.5v1.2\r\n            C107.5,633.3,107.2,633.5,107,633.5z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M109.2,635.3h-3c-0.3,0-0.5-0.2-0.5-0.5v-1.2c0-0.3,0.2-0.5,0.5-0.5h3c0.3,0,0.5,0.2,0.5,0.5v1.2\r\n            C109.6,635.1,109.4,635.3,109.2,635.3z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M112.2,636.6h-3c-0.3,0-0.5-0.2-0.5-0.5v-1.2c0-0.3,0.2-0.5,0.5-0.5h3c0.3,0,0.5,0.2,0.5,0.5v1.2\r\n            C112.7,636.4,112.5,636.6,112.2,636.6z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M116.5,637.9h-4.3c-0.3,0-0.5-0.2-0.5-0.5v-1.2c0-0.3,0.2-0.5,0.5-0.5h4.3c0.3,0,0.5,0.2,0.5,0.5v1.2\r\n            C117,637.7,116.8,637.9,116.5,637.9z\" />\r\n        </g>\r\n    </g>\r\n    <g>\r\n        <path fill=\"#8073B1\" d=\"M866.5,740.6c0,5.5,4.5,10,10,10s10-4.5,10-10s-4.5-10-10-10S866.5,735.1,866.5,740.6z\" />\r\n        <g>\r\n            <g>\r\n                <path fill=\"#FFFFFF\" d=\"M878.2,733.9c-0.7,0.4-0.9,1.2-0.5,1.9s1.2,0.9,1.9,0.5s0.9-1.2,0.5-1.9S878.9,733.5,878.2,733.9\r\n                L878.2,733.9z\" />\r\n                <path fill=\"#FFFFFF\" d=\"M878.7,741.9l0.6,3c0.1,0.6,1,0.5,1-0.4l0.1-6.4c0-2-2.6-1.7-2.4,0v0.3l-1.5,0.4c-0.7,0.2-0.7,1,0.1,1\r\n                l1.5-0.1v0.5h-0.7c-0.6,0-1,0.1-1,0.8l-0.2,2.4c0,0.7,0.9,0.6,1.1-0.1l0.4-1.4H878.7L878.7,741.9z\" />\r\n            </g>\r\n            <path fill=\"#FFFFFF\" d=\"M873,743.1h-4.3c-0.3,0-0.5-0.2-0.5-0.5v-1.2c0-0.3,0.2-0.5,0.5-0.5h4.3c0.3,0,0.5,0.2,0.5,0.5v1.2\r\n            C873.5,742.9,873.2,743.1,873,743.1z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M875.2,744.9h-3c-0.3,0-0.5-0.2-0.5-0.5v-1.2c0-0.3,0.2-0.5,0.5-0.5h3c0.3,0,0.5,0.2,0.5,0.5v1.2\r\n            C875.6,744.7,875.4,744.9,875.2,744.9z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M878.2,746.2h-3c-0.3,0-0.5-0.2-0.5-0.5v-1.2c0-0.3,0.2-0.5,0.5-0.5h3c0.3,0,0.5,0.2,0.5,0.5v1.2\r\n            C878.7,746,878.5,746.2,878.2,746.2z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M882.5,747.5h-4.3c-0.3,0-0.5-0.2-0.5-0.5v-1.2c0-0.3,0.2-0.5,0.5-0.5h4.3c0.3,0,0.5,0.2,0.5,0.5v1.2\r\n            C883,747.3,882.8,747.5,882.5,747.5z\" />\r\n        </g>\r\n    </g>\r\n    <g>\r\n        <path fill=\"#8073B1\" d=\"M1525,445.5c0,5.5,4.5,10,10,10s10-4.5,10-10s-4.5-10-10-10S1525,440,1525,445.5z\" />\r\n        <g>\r\n            <g>\r\n                <path fill=\"#FFFFFF\" d=\"M1536.7,438.8c-0.7,0.4-0.9,1.2-0.5,1.9c0.4,0.7,1.2,0.9,1.9,0.5c0.7-0.4,0.9-1.2,0.5-1.9\r\n                S1537.4,438.4,1536.7,438.8L1536.7,438.8z\" />\r\n                <path fill=\"#FFFFFF\" d=\"M1537.2,446.8l0.6,3c0.1,0.6,1,0.5,1-0.4l0.1-6.4c0-2-2.6-1.7-2.4,0v0.3l-1.5,0.4c-0.7,0.2-0.7,1,0.1,1\r\n                l1.5-0.1v0.5h-0.7c-0.6,0-1,0.1-1,0.8l-0.2,2.4c0,0.7,0.9,0.6,1.1-0.1l0.4-1.4L1537.2,446.8L1537.2,446.8z\" />\r\n            </g>\r\n            <path fill=\"#FFFFFF\" d=\"M1531.5,448h-4.3c-0.3,0-0.5-0.2-0.5-0.5v-1.2c0-0.3,0.2-0.5,0.5-0.5h4.3c0.3,0,0.5,0.2,0.5,0.5v1.2\r\n            C1532,447.8,1531.8,448,1531.5,448z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M1533.7,449.8h-3c-0.3,0-0.5-0.2-0.5-0.5v-1.2c0-0.3,0.2-0.5,0.5-0.5h3c0.3,0,0.5,0.2,0.5,0.5v1.2\r\n            C1534.1,449.6,1533.9,449.8,1533.7,449.8z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M1536.7,451.1h-3c-0.3,0-0.5-0.2-0.5-0.5v-1.2c0-0.3,0.2-0.5,0.5-0.5h3c0.3,0,0.5,0.2,0.5,0.5v1.2\r\n            C1537.2,450.9,1537,451.1,1536.7,451.1z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M1541.1,452.4h-4.3c-0.3,0-0.5-0.2-0.5-0.5v-1.2c0-0.3,0.2-0.5,0.5-0.5h4.3c0.3,0,0.5,0.2,0.5,0.5v1.2\r\n            C1541.5,452.2,1541.3,452.4,1541.1,452.4z\" />\r\n        </g>\r\n    </g>\r\n    <g>\r\n        <path fill=\"#8073B1\" d=\"M1593.4,703.1c0,5.5,4.5,10,10,10s10-4.5,10-10s-4.5-10-10-10C1597.8,693.1,1593.4,697.6,1593.4,703.1z\" />\r\n        <g>\r\n            <g>\r\n                <path fill=\"#FFFFFF\" d=\"M1605,696.4c-0.7,0.4-0.9,1.2-0.5,1.9s1.2,0.9,1.9,0.5c0.7-0.4,0.9-1.2,0.5-1.9S1605.7,696,1605,696.4\r\n                L1605,696.4z\" />\r\n                <path fill=\"#FFFFFF\" d=\"M1605.5,704.4l0.6,3c0.1,0.6,1,0.5,1-0.4l0.1-6.4c0-2-2.6-1.7-2.4,0v0.3l-1.5,0.4c-0.7,0.2-0.7,1,0.1,1\r\n                l1.5-0.1v0.5h-0.7c-0.6,0-1,0.1-1,0.8l-0.2,2.4c0,0.7,0.9,0.6,1.1-0.1l0.4-1.4H1605.5L1605.5,704.4z\" />\r\n            </g>\r\n            <path fill=\"#FFFFFF\" d=\"M1599.8,705.6h-4.3c-0.3,0-0.5-0.2-0.5-0.5v-1.2c0-0.3,0.2-0.5,0.5-0.5h4.3c0.3,0,0.5,0.2,0.5,0.5v1.2\r\n            C1600.3,705.4,1600.1,705.6,1599.8,705.6z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M1602,707.4h-3c-0.3,0-0.5-0.2-0.5-0.5v-1.2c0-0.3,0.2-0.5,0.5-0.5h3c0.3,0,0.5,0.2,0.5,0.5v1.2\r\n            C1602.5,707.2,1602.2,707.4,1602,707.4z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M1605,708.7h-3c-0.3,0-0.5-0.2-0.5-0.5V707c0-0.3,0.2-0.5,0.5-0.5h3c0.3,0,0.5,0.2,0.5,0.5v1.2\r\n            C1605.5,708.5,1605.3,708.7,1605,708.7z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M1609.4,710h-4.3c-0.3,0-0.5-0.2-0.5-0.5v-1.2c0-0.3,0.2-0.5,0.5-0.5h4.3c0.3,0,0.5,0.2,0.5,0.5v1.2\r\n            C1609.9,709.8,1609.6,710,1609.4,710z\" />\r\n        </g>\r\n    </g>\r\n    <line fill=\"none\" x1=\"1194.8\" y1=\"397.8\" x2=\"1191.6\" y2=\"393.9\" />\r\n    <g>\r\n        <text transform=\"matrix(1 0 0 1 750.0333 771.6215)\" fill=\"#777777\" font-family=\"'AdobeSongStd-Light-GBpc-EUC-H'\" font-size=\"10px\">入口</text>\r\n    </g>\r\n    <g>\r\n        <text transform=\"matrix(1 0 0 1 1289.0332 628.7916)\" fill=\"#777777\" font-family=\"'AdobeSongStd-Light-GBpc-EUC-H'\" font-size=\"12px\">通道</text>\r\n    </g>\r\n    <g>\r\n        <text transform=\"matrix(1 0 0 1 542.7827 771.6215)\" fill=\"#777777\" font-family=\"'AdobeSongStd-Light-GBpc-EUC-H'\" font-size=\"10px\">入口</text>\r\n    </g>\r\n    <polygon fill=\"#777777\" points=\"1270.1,625.4 1279.5,630.7 1279.5,620 \" />\r\n    <polygon fill=\"#777777\" points=\"1332.4,625.4 1323.1,620 1323.1,630.7 \" />\r\n    <g>\r\n        <path fill=\"#53B791\" d=\"M113.9,355c0,5.5,4.4,10,9.7,10s9.7-4.5,9.7-10s-4.4-10-9.7-10S113.9,349.5,113.9,355z\" />\r\n        <path fill=\"#FFFFFF\" d=\"M127.7,348.5L127.7,348.5L127.7,348.5L127.7,348.5c-0.1,0-0.1-0.1-0.1-0.1s0,0-0.1,0l0,0c0,0,0,0-0.1,0l0,0\r\n        h-0.1h-0.1h-0.6H126h-0.6h-0.6h-0.6h-0.6H123h-0.6h-0.6h-0.6h-0.6H120h-0.6h-0.1c-0.1,0-0.1,0-0.2,0s-0.2,0.1-0.3,0.1\r\n        c-0.1,0-0.1,0.1-0.2,0.1l0,0l0,0l-0.1,0.1l0,0l0,0l0,0l0,0l0,0l0,0l0,0c0,0,0,0,0,0.1l0,0c0,0,0,0,0,0.1l0,0v0.1l0,0v0.1l0,0v0.1\r\n        v11.2v0.1l0,0v0.1l0,0v0.1l0,0v0.1l0,0c0,0.1,0.1,0.1,0.1,0.2l0,0c0,0,0,0,0.1,0.1l0,0c0,0.1,0.1,0.1,0.1,0.1l0,0\r\n        c0,0,0.1,0.1,0.2,0.1l0,0l0,0l0,0c0.1,0.1,0.3,0.1,0.4,0.1h0.1h0.6h0.6h0.6h0.6h0.6h0.6h0.6h0.6h0.6h0.6h0.6h0.6h0.6h0.1h0.1l0,0\r\n        c0,0,0,0,0.1,0l0,0c0,0,0,0,0.1,0l0,0c0,0,0,0,0.1,0l0,0l0,0c0.3-0.2,0.6-0.5,0.6-0.9v-11.2C128.3,349.1,128.1,348.7,127.7,348.5z\r\n         M124.5,355c0.1,0.1,0.2,0.3,0.2,0.5c0,0.3-0.2,0.5-0.4,0.7c-0.1,0-0.1,0.1-0.2,0.1l0,0c0,0,0,0-0.1,0h-0.1c-0.2,0-0.3-0.1-0.4-0.1\r\n        c0,0,0,0-0.1-0.1l0,0c0,0,0,0-0.1-0.1l0,0c0,0,0,0,0-0.1l0,0c0,0,0,0,0-0.1l0,0l0,0l0,0l0,0l0,0c0,0,0,0,0-0.1l0,0v-0.1v-0.1l0,0\r\n        l0,0l0,0l0,0l0,0l0,0l0,0l0,0c0,0,0-0.1,0.1-0.1l0,0l0,0l0,0l0,0c0,0,0,0,0.1,0c0.1-0.1,0.3-0.1,0.4-0.1l0,0h0.1c0,0,0,0,0.1,0l0,0\r\n        C124.3,354.8,124.4,354.9,124.5,355z M127.1,361L127.1,361C127,361,127,361,127.1,361c-0.1,0.1-0.2,0.1-0.2,0.1l0,0h-0.1l0,0h-0.1\r\n        h-0.2h-0.6h-0.6h-0.6h-0.6h-0.6H123h-0.6h-0.6h-0.6h-0.6H120h-0.2c-0.2,0-0.3,0-0.4-0.1l0,0l0,0l0,0l0,0l-0.1-0.1l5.3-1h0.1l0,0\r\n        c0,0,0,0,0.1,0l0,0h0.1l0,0l0,0c0,0,0,0,0.1,0l0,0h0.1l0,0l0,0l0,0l0,0l0,0l0,0l0,0l0.1-0.1l0,0c0,0,0,0,0-0.1l0,0c0,0,0,0,0-0.1\r\n        l0,0c0,0,0,0,0-0.1l0,0l0,0l0,0c0-0.1,0-0.2,0-0.3V352c0-0.1,0-0.2,0-0.3l0,0l0,0l0,0l0,0l0,0l0,0l0,0l0,0c0,0,0-0.1-0.1-0.1l0,0\r\n        l0,0l0,0l0,0l0,0l0,0l0,0l0,0c0,0-0.1-0.1-0.2-0.1l0,0c0,0,0,0-0.1,0l0,0l0,0l0,0l0,0h-0.1l0,0c0,0,0,0-0.1,0l0,0l0,0h-0.1h-0.2\r\n        l0,0l-5.1-0.8l0,0c0.1-0.3,0.4-0.5,0.7-0.5c0,0,0,0,0.1,0h0.2h0.6h0.6h0.6h0.6h0.6h0.6h0.6h0.6h0.6h0.6h0.6h0.2h0.1l0,0h0.1l0,0\r\n        h0.1l0,0h0.1c0.3,0.2,0.5,0.5,0.5,0.8v10.2C127.6,360.5,127.4,360.8,127.1,361z\" />\r\n    </g>\r\n    <g>\r\n        <path fill=\"#53B791\" d=\"M652.2,370.7c0,5.5,4.4,10,9.7,10s9.7-4.5,9.7-10s-4.4-10-9.7-10S652.2,365.2,652.2,370.7z\" />\r\n        <path fill=\"#FFFFFF\" d=\"M666,364.2L666,364.2L666,364.2L666,364.2c-0.1,0-0.1-0.1-0.1-0.1s0,0-0.1,0l0,0c0,0,0,0-0.1,0l0,0h-0.1\r\n        h-0.1h-0.6h-0.6h-0.6h-0.6h-0.6h-0.6h-0.6h-0.6h-0.6h-0.6h-0.6h-0.6h-0.6h-0.1c-0.1,0-0.1,0-0.2,0c-0.1,0-0.2,0.1-0.3,0.1\r\n        s-0.1,0.1-0.2,0.1l0,0l0,0l-0.1,0.1l0,0l0,0l0,0l0,0l0,0l0,0l0,0c0,0,0,0,0,0.1l0,0c0,0,0,0,0,0.1l0,0v0.1l0,0v0.1l0,0v0.1v11.2\r\n        v0.1l0,0v0.1l0,0v0.1l0,0v0.1l0,0c0,0.1,0.1,0.1,0.1,0.2l0,0c0,0,0,0,0.1,0.1l0,0c0,0.1,0.1,0.1,0.1,0.1l0,0c0,0,0.1,0.1,0.2,0.1\r\n        l0,0l0,0l0,0c0.1,0.1,0.3,0.1,0.4,0.1h0.1h0.6h0.6h0.6h0.6h0.6h0.6h0.6h0.6h0.6h0.6h0.6h0.6h0.6h0.1h0.1l0,0c0,0,0,0,0.1,0l0,0\r\n        c0,0,0,0,0.1,0l0,0c0,0,0,0,0.1,0l0,0l0,0c0.3-0.2,0.6-0.5,0.6-0.9V365C666.6,364.7,666.4,364.4,666,364.2z M662.8,370.6\r\n        c0.1,0.1,0.2,0.3,0.2,0.5c0,0.3-0.2,0.5-0.4,0.7c-0.1,0-0.1,0.1-0.2,0.1l0,0c0,0,0,0-0.1,0h-0.1c-0.2,0-0.3-0.1-0.4-0.1\r\n        c0,0,0,0-0.1-0.1l0,0c0,0,0,0-0.1-0.1l0,0c0,0,0,0,0-0.1l0,0c0,0,0,0,0-0.1l0,0l0,0l0,0l0,0l0,0c0,0,0,0,0-0.1l0,0v-0.1v-0.1l0,0\r\n        l0,0l0,0l0,0l0,0l0,0l0,0l0,0c0,0,0-0.1,0.1-0.1l0,0l0,0l0,0l0,0c0,0,0,0,0.1,0c0.1-0.1,0.3-0.1,0.4-0.1l0,0h0.1c0,0,0,0,0.1,0l0,0\r\n        C662.6,370.5,662.7,370.5,662.8,370.6z M665.4,376.6C665.4,376.6,665.4,376.7,665.4,376.6C665.3,376.7,665.3,376.7,665.4,376.6\r\n        c-0.1,0.1-0.2,0.1-0.2,0.1l0,0h-0.1l0,0H665h-0.2h-0.6h-0.6H663h-0.6h-0.6h-0.6h-0.6H660h-0.6h-0.6h-0.6H658c-0.2,0-0.3,0-0.4-0.1\r\n        l0,0l0,0l0,0l0,0l-0.1-0.1l5.3-1h0.1l0,0c0,0,0,0,0.1,0l0,0h0.1l0,0l0,0c0,0,0,0,0.1,0l0,0h0.1l0,0l0,0l0,0l0,0l0,0l0,0l0,0\r\n        l0.1-0.1l0,0c0,0,0,0,0-0.1l0,0c0,0,0,0,0-0.1l0,0c0,0,0,0,0-0.1l0,0l0,0l0,0c0-0.1,0-0.2,0-0.3v-7.2c0-0.1,0-0.2,0-0.3l0,0l0,0\r\n        l0,0l0,0l0,0l0,0l0,0l0,0c0,0,0-0.1-0.1-0.1l0,0l0,0l0,0l0,0l0,0l0,0l0,0l0,0c0,0-0.1-0.1-0.2-0.1l0,0c0,0,0,0-0.1,0l0,0l0,0l0,0\r\n        l0,0h-0.1l0,0c0,0,0,0-0.1,0l0,0l0,0h-0.1h-0.2l0,0l-5.1-0.8l0,0c0.1-0.3,0.4-0.5,0.7-0.5c0,0,0,0,0.1,0h0.2h0.6h0.6h0.6h0.6h0.6\r\n        h0.6h0.6h0.6h0.6h0.6h0.6h0.2h0.1l0,0h0.1l0,0h0.1l0,0h0.1c0.3,0.2,0.5,0.5,0.5,0.8v10.2C665.9,376.2,665.7,376.5,665.4,376.6z\" />\r\n    </g>\r\n    <g>\r\n        <path fill=\"#53B791\" d=\"M542.8,747.6c0,5.5,4.4,10,9.7,10c5.4,0,9.7-4.5,9.7-10s-4.4-10-9.7-10\r\n        C547.1,737.6,542.8,742.1,542.8,747.6z\" />\r\n        <path fill=\"#FFFFFF\" d=\"M556.6,741.1L556.6,741.1L556.6,741.1L556.6,741.1C556.5,741.1,556.5,741,556.6,741.1\r\n        c-0.1-0.1-0.1-0.1-0.2-0.1l0,0c0,0,0,0-0.1,0l0,0h-0.1h-0.1h-0.6h-0.6h-0.6h-0.6h-0.6h-0.6h-0.6h-0.6h-0.6h-0.6h-0.6h-0.6h-0.6\r\n        h-0.1c-0.1,0-0.1,0-0.2,0c-0.1,0-0.2,0.1-0.3,0.1s-0.1,0.1-0.2,0.1l0,0l0,0l-0.1,0.1l0,0l0,0l0,0l0,0l0,0l0,0l0,0c0,0,0,0,0,0.1\r\n        l0,0c0,0,0,0,0,0.1l0,0v0.1l0,0v0.1l0,0v0.1V753v0.1l0,0v0.1l0,0v0.1l0,0v0.1l0,0c0,0.1,0.1,0.1,0.1,0.2l0,0c0,0,0,0,0.1,0.1l0,0\r\n        c0,0.1,0.1,0.1,0.1,0.1l0,0c0,0,0.1,0.1,0.2,0.1l0,0l0,0l0,0c0.1,0.1,0.3,0.1,0.4,0.1h0.1h0.6h0.6h0.6h0.6h0.6h0.6h0.6h0.6h0.6h0.6\r\n        h0.6h0.6h0.6h0.1h0.1l0,0c0,0,0,0,0.1,0l0,0c0,0,0,0,0.1,0l0,0c0,0,0,0,0.1,0l0,0l0,0c0.3-0.2,0.6-0.5,0.6-0.9V742\r\n        C557.2,741.6,557,741.3,556.6,741.1z M553.4,747.6c0.1,0.1,0.2,0.3,0.2,0.5c0,0.3-0.2,0.5-0.4,0.7c-0.1,0-0.1,0.1-0.2,0.1l0,0\r\n        c0,0,0,0-0.1,0h-0.1c-0.2,0-0.3-0.1-0.4-0.1c0,0,0,0-0.1-0.1l0,0c0,0,0,0-0.1-0.1l0,0c0,0,0,0,0-0.1l0,0c0,0,0,0,0-0.1l0,0l0,0l0,0\r\n        l0,0l0,0c0,0,0,0,0-0.1l0,0v-0.1v-0.1l0,0l0,0l0,0l0,0l0,0l0,0l0,0l0,0c0,0,0-0.1,0.1-0.1l0,0l0,0l0,0l0,0c0,0,0,0,0.1,0\r\n        c0.1-0.1,0.3-0.1,0.4-0.1l0,0h0.1c0,0,0,0,0.1,0l0,0C553.2,747.4,553.3,747.5,553.4,747.6z M556,753.5\r\n        C556,753.6,556,753.6,556,753.5C556,753.6,556,753.6,556,753.5c-0.1,0.1-0.2,0.1-0.2,0.1l0,0h-0.1l0,0h-0.1h-0.2h-0.6h-0.6h-0.6\r\n        H553h-0.6h-0.6h-0.6h-0.6H550h-0.6h-0.6h-0.2c-0.2,0-0.3,0-0.4-0.1l0,0l0,0l0,0l0,0l-0.1-0.1l5.3-1h0.1l0,0c0,0,0,0,0.1,0l0,0h0.1\r\n        l0,0l0,0c0,0,0,0,0.1,0l0,0h0.1l0,0l0,0l0,0l0,0l0,0l0,0l0,0l0.1-0.1l0,0c0,0,0,0,0-0.1l0,0c0,0,0,0,0-0.1l0,0c0,0,0,0,0-0.1l0,0\r\n        l0,0l0,0c0-0.1,0-0.2,0-0.3V744c0-0.1,0-0.2,0-0.3l0,0l0,0l0,0l0,0l0,0l0,0l0,0l0,0c0,0,0-0.1-0.1-0.1l0,0l0,0l0,0l0,0l0,0l0,0l0,0\r\n        l0,0c0,0-0.1-0.1-0.2-0.1l0,0c0,0,0,0-0.1,0l0,0l0,0l0,0l0,0h-0.1l0,0c0,0,0,0-0.1,0l0,0l0,0h-0.1h-0.2l0,0l-5.1-0.8l0,0\r\n        c0.1-0.3,0.4-0.5,0.7-0.5c0,0,0,0,0.1,0h0.2h0.6h0.6h0.6h0.6h0.6h0.6h0.6h0.6h0.6h0.6h0.6h0.2h0.1l0,0h0.1l0,0h0.1l0,0h0.1\r\n        c0.3,0.2,0.5,0.5,0.5,0.8v10.2C556.5,753.1,556.3,753.4,556,753.5z\" />\r\n    </g>\r\n    <g>\r\n        <path fill=\"#53B791\" d=\"M747.7,750.3c0,5.5,4.4,10,9.7,10s9.7-4.5,9.7-10s-4.4-10-9.7-10S747.7,744.8,747.7,750.3z\" />\r\n        <path fill=\"#FFFFFF\" d=\"M761.5,743.8L761.5,743.8L761.5,743.8L761.5,743.8C761.4,743.8,761.4,743.7,761.5,743.8\r\n        c-0.1-0.1-0.1-0.1-0.2-0.1l0,0c0,0,0,0-0.1,0l0,0h-0.1H761h-0.6h-0.6h-0.6h-0.6H758h-0.6h-0.6h-0.6h-0.6H755h-0.6h-0.6h-0.6h-0.1\r\n        c-0.1,0-0.1,0-0.2,0c-0.1,0-0.2,0.1-0.3,0.1s-0.1,0.1-0.2,0.1l0,0l0,0l-0.1,0.1l0,0l0,0l0,0l0,0l0,0l0,0l0,0c0,0,0,0,0,0.1l0,0\r\n        c0,0,0,0,0,0.1l0,0v0.1l0,0v0.1l0,0v0.1V756v0.1l0,0v0.1l0,0v0.1l0,0v0.1l0,0c0,0.1,0.1,0.1,0.1,0.2l0,0c0,0,0,0,0.1,0.1l0,0\r\n        c0,0.1,0.1,0.1,0.1,0.1l0,0c0,0,0.1,0.1,0.2,0.1l0,0l0,0l0,0c0.1,0.1,0.3,0.1,0.4,0.1h0.1h0.6h0.6h0.6h0.6h0.6h0.6h0.6h0.6h0.6h0.6\r\n        h0.6h0.6h0.6h0.1h0.1l0,0c0,0,0,0,0.1,0l0,0c0,0,0,0,0.1,0l0,0c0,0,0,0,0.1,0l0,0l0,0c0.3-0.2,0.6-0.5,0.6-0.9v-11.2\r\n        C762.1,744.3,761.9,744,761.5,743.8z M758.3,750.2c0.1,0.1,0.2,0.3,0.2,0.5c0,0.3-0.2,0.5-0.4,0.7c-0.1,0-0.1,0.1-0.2,0.1l0,0\r\n        c0,0,0,0-0.1,0h-0.1c-0.2,0-0.3-0.1-0.4-0.1c0,0,0,0-0.1-0.1l0,0c0,0,0,0-0.1-0.1l0,0c0,0,0,0,0-0.1l0,0c0,0,0,0,0-0.1l0,0l0,0l0,0\r\n        l0,0l0,0c0,0,0,0,0-0.1l0,0v-0.1v-0.1l0,0l0,0l0,0l0,0l0,0l0,0l0,0l0,0c0,0,0-0.1,0.1-0.1l0,0l0,0l0,0l0,0c0,0,0,0,0.1,0\r\n        c0.1-0.1,0.3-0.1,0.4-0.1l0,0h0.1c0,0,0,0,0.1,0l0,0C758.1,750.1,758.2,750.1,758.3,750.2z M760.9,756.2L760.9,756.2\r\n        C760.8,756.3,760.8,756.3,760.9,756.2c-0.1,0.1-0.2,0.1-0.2,0.1l0,0h-0.1l0,0h-0.1h-0.2h-0.6h-0.6h-0.6H758h-0.6h-0.6h-0.6h-0.6\r\n        H755h-0.6h-0.6h-0.2c-0.2,0-0.3,0-0.4-0.1l0,0l0,0l0,0l0,0l-0.1-0.1l5.3-1h0.1l0,0c0,0,0,0,0.1,0l0,0h0.1l0,0l0,0c0,0,0,0,0.1,0\r\n        l0,0h0.1l0,0l0,0l0,0l0,0l0,0l0,0l0,0l0.1-0.1l0,0c0,0,0,0,0-0.1l0,0c0,0,0,0,0-0.1l0,0c0,0,0,0,0-0.1l0,0l0,0l0,0\r\n        c0-0.1,0-0.2,0-0.3v-7.2c0-0.1,0-0.2,0-0.3l0,0l0,0l0,0l0,0l0,0l0,0l0,0l0,0c0,0,0-0.1-0.1-0.1l0,0l0,0l0,0l0,0l0,0l0,0l0,0l0,0\r\n        c0,0-0.1-0.1-0.2-0.1l0,0c0,0,0,0-0.1,0l0,0l0,0l0,0l0,0h-0.1l0,0c0,0,0,0-0.1,0l0,0l0,0h-0.1h-0.2l0,0l-5.1-0.8l0,0\r\n        c0.1-0.3,0.4-0.5,0.7-0.5c0,0,0,0,0.1,0h0.2h0.6h0.6h0.6h0.6h0.6h0.6h0.6h0.6h0.6h0.6h0.6h0.2h0.1l0,0h0.1l0,0h0.1l0,0h0.1\r\n        c0.3,0.2,0.5,0.5,0.5,0.8v10.2C761.4,755.8,761.2,756.1,760.9,756.2z\" />\r\n    </g>\r\n    <g>\r\n        <path fill=\"#86A2F0\" d=\"M237.9,398.2c0,5.5,4.5,10,10,10s10-4.5,10-10s-4.5-10-10-10S237.9,392.7,237.9,398.2z\" />\r\n        <g>\r\n            <path fill=\"#FFFFFF\" d=\"M256.1,399H251c-0.5,0-0.8-0.4-0.8-0.8v-0.5c0-0.5,0.4-0.8,0.8-0.8h5.1c0.5,0,0.8,0.4,0.8,0.8v0.5\r\n            C256.9,398.6,256.5,399,256.1,399z M247.1,404.6H242c-0.5,0-0.8-0.4-0.8-0.8v-0.5c0-0.5,0.4-0.8,0.8-0.8h5.1\r\n            c0.5,0,0.8,0.4,0.8,0.8v0.5C247.9,404.2,247.5,404.6,247.1,404.6z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M252,398.5l-4.2,5.7c-0.3,0.4-0.9,0.5-1.3,0.2l-0.2-0.1c-0.4-0.3-0.5-0.9-0.2-1.3l4.2-5.7\r\n            c0.3-0.4,0.9-0.5,1.3-0.2l0.2,0.1C252.2,397.5,252.3,398.1,252,398.5z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M246.2,392.8c0,0.8,0.7,1.5,1.5,1.5s1.5-0.7,1.5-1.5l0,0c0-0.8-0.7-1.5-1.5-1.5S246.2,391.9,246.2,392.8\r\n            L246.2,392.8z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M246.1,402v-6.1c0-0.6,0.5-1.1,1.1-1.1h1.1c0.3,0,0.6,0.1,0.8,0.3c0.1,0.1,0.2,0.3,0.2,0.5v1.8L246.1,402\r\n            L246.1,402z\" />\r\n        </g>\r\n    </g>\r\n    <g>\r\n        <path fill=\"#86A2F0\" d=\"M299.4,515.4c0,5.5,4.5,10,10,10s10-4.5,10-10s-4.5-10-10-10S299.4,509.9,299.4,515.4z\" />\r\n        <g>\r\n            <path fill=\"#FFFFFF\" d=\"M317.5,516.2h-5.1c-0.5,0-0.8-0.4-0.8-0.8v-0.5c0-0.5,0.4-0.8,0.8-0.8h5.1c0.5,0,0.8,0.4,0.8,0.8v0.5\r\n            C318.4,515.8,318,516.2,317.5,516.2z M308.6,521.8h-5.1c-0.5,0-0.8-0.4-0.8-0.8v-0.5c0-0.5,0.4-0.8,0.8-0.8h5.1\r\n            c0.5,0,0.8,0.4,0.8,0.8v0.5C309.4,521.4,309,521.8,308.6,521.8z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M313.5,515.7l-4.2,5.7c-0.3,0.4-0.9,0.5-1.3,0.2l-0.2-0.1c-0.4-0.3-0.5-0.9-0.2-1.3l4.2-5.7\r\n            c0.3-0.4,0.9-0.5,1.3-0.2l0.2,0.1C313.7,514.6,313.8,515.2,313.5,515.7z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M307.7,510c0,0.8,0.7,1.5,1.5,1.5s1.5-0.7,1.5-1.5l0,0c0-0.8-0.7-1.5-1.5-1.5\r\n            C308.4,508.4,307.7,509.1,307.7,510L307.7,510z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M307.6,519.2v-6.1c0-0.6,0.5-1.1,1.1-1.1h1.1c0.3,0,0.6,0.1,0.8,0.3c0.1,0.1,0.2,0.3,0.2,0.5v1.8\r\n            L307.6,519.2L307.6,519.2z\" />\r\n        </g>\r\n    </g>\r\n    <g>\r\n        <path fill=\"#86A2F0\" d=\"M677.9,530.9c0,5.5,4.5,10,10,10s10-4.5,10-10s-4.5-10-10-10S677.9,525.4,677.9,530.9z\" />\r\n        <g>\r\n            <path fill=\"#FFFFFF\" d=\"M696,531.6h-5c-0.5,0-0.8-0.4-0.8-0.8v-0.5c0-0.5,0.4-0.8,0.8-0.8h5.1c0.5,0,0.8,0.4,0.8,0.8v0.5\r\n            C696.8,531.3,696.5,531.6,696,531.6z M687,537.3h-5c-0.5,0-0.8-0.4-0.8-0.8V536c0-0.5,0.4-0.8,0.8-0.8h5.1c0.5,0,0.8,0.4,0.8,0.8\r\n            v0.5C687.9,536.9,687.5,537.3,687,537.3z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M692,531.2l-4.2,5.7c-0.3,0.4-0.9,0.5-1.3,0.2l-0.2-0.1c-0.4-0.3-0.5-0.9-0.2-1.3l4.2-5.7\r\n            c0.3-0.4,0.9-0.5,1.3-0.2l0.2,0.1C692.2,530.1,692.3,530.7,692,531.2z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M686.2,525.4c0,0.8,0.7,1.5,1.5,1.5s1.5-0.7,1.5-1.5l0,0c0-0.8-0.7-1.5-1.5-1.5S686.2,524.6,686.2,525.4\r\n            L686.2,525.4z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M686,534.6v-6.1c0-0.6,0.5-1.1,1.1-1.1h1.1c0.3,0,0.6,0.1,0.8,0.3c0.1,0.1,0.2,0.3,0.2,0.5v1.8L686,534.6\r\n            L686,534.6z\" />\r\n        </g>\r\n    </g>\r\n    <g>\r\n        <path fill=\"#86A2F0\" d=\"M1042.1,411.8c0,5.5,4.5,10,10,10s10-4.5,10-10s-4.5-10-10-10S1042.1,406.2,1042.1,411.8z\" />\r\n        <g>\r\n            <path fill=\"#FFFFFF\" d=\"M1060.2,412.5h-5.1c-0.5,0-0.8-0.4-0.8-0.8v-0.5c0-0.5,0.4-0.8,0.8-0.8h5.1c0.5,0,0.8,0.4,0.8,0.8v0.5\r\n            C1061.1,412.1,1060.7,412.5,1060.2,412.5z M1051.3,418.1h-5.1c-0.5,0-0.8-0.4-0.8-0.8v-0.5c0-0.5,0.4-0.8,0.8-0.8h5.1\r\n            c0.5,0,0.8,0.4,0.8,0.8v0.5C1052.1,417.8,1051.7,418.1,1051.3,418.1z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M1056.2,412l-4.2,5.7c-0.3,0.4-0.9,0.5-1.3,0.2l-0.2-0.1c-0.4-0.3-0.5-0.9-0.2-1.3l4.2-5.7\r\n            c0.3-0.4,0.9-0.5,1.3-0.2l0.2,0.1C1056.4,411,1056.5,411.6,1056.2,412z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M1050.4,406.3c0,0.8,0.7,1.5,1.5,1.5s1.5-0.7,1.5-1.5l0,0c0-0.8-0.7-1.5-1.5-1.5\r\n            S1050.4,405.5,1050.4,406.3L1050.4,406.3z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M1050.3,415.5v-6.1c0-0.6,0.5-1.1,1.1-1.1h1.1c0.3,0,0.6,0.1,0.8,0.3c0.1,0.1,0.2,0.3,0.2,0.5v1.8\r\n            L1050.3,415.5L1050.3,415.5z\" />\r\n        </g>\r\n    </g>\r\n    <g>\r\n        <path fill=\"#C27FEC\" d=\"M1176.2,740.3c0,5.5,4.6,10,10.2,10s10.2-4.5,10.2-10s-4.6-10-10.2-10S1176.2,734.8,1176.2,740.3z\" />\r\n        <g>\r\n            <path fill=\"#FFFFFF\" d=\"M1183.2,739v1.4c0,0.4,0.2,0.6,0.5,0.8l0.3,3.6c0,0.4,0.3,0.6,0.6,0.6s0.5-0.2,0.6-0.6l0.3-3.6\r\n            c0.3-0.2,0.5-0.4,0.5-0.8V739C1185.9,737.4,1183.2,737.4,1183.2,739L1183.2,739z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M1184,735.3c-0.6,0.3-0.8,1-0.5,1.6s1,0.8,1.6,0.5s0.8-1,0.5-1.6C1185.3,735.3,1184.6,735,1184,735.3\r\n            L1184,735.3z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M1190.5,733.3h-7.7c-1.2,0-2.3,1-2.3,2.3v9.4c0,1.2,1,2.3,2.3,2.3h7.7c1.2,0,2.3-1,2.3-2.3v-9.4\r\n            C1192.7,734.4,1191.7,733.3,1190.5,733.3z M1191.9,745c0,0.8-0.6,1.4-1.4,1.4h-7.7c-0.8,0-1.4-0.6-1.4-1.4v-9.4\r\n            c0-0.8,0.6-1.4,1.4-1.4h7.7c0.8,0,1.4,0.6,1.4,1.4V745z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M1189.4,743.6V741c0-0.5-1-0.5-1,0v2.5l-0.3-0.3c-0.4-0.4-1.1,0.3-0.7,0.7l1.1,1.1c0.3,0.3,0.5,0.3,0.8,0\r\n            l1.1-1.1c0.4-0.4-0.3-1.1-0.7-0.7L1189.4,743.6L1189.4,743.6z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M1189.4,737v2.5c0,0.5-1,0.5-1,0V737l-0.3,0.3c-0.4,0.4-1.1-0.3-0.7-0.7l1.1-1.1c0.3-0.3,0.5-0.3,0.8,0\r\n            l1.1,1.1c0.4,0.4-0.3,1.1-0.7,0.7L1189.4,737L1189.4,737z\" />\r\n        </g>\r\n    </g>\r\n    <g>\r\n        <path fill=\"#C27FEC\" d=\"M1429.3,691.4c0,5.5,4.6,10,10.2,10s10.2-4.5,10.2-10s-4.6-10-10.2-10S1429.3,685.9,1429.3,691.4z\" />\r\n        <g>\r\n            <path fill=\"#FFFFFF\" d=\"M1436.4,690.1v1.4c0,0.4,0.2,0.6,0.5,0.8l0.3,3.6c0,0.4,0.3,0.6,0.6,0.6s0.5-0.2,0.6-0.6l0.3-3.6\r\n            c0.3-0.2,0.5-0.4,0.5-0.8v-1.4C1439.1,688.5,1436.4,688.5,1436.4,690.1L1436.4,690.1z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M1437.2,686.4c-0.6,0.3-0.8,1-0.5,1.6s1,0.8,1.6,0.5s0.8-1,0.5-1.6\r\n            C1438.5,686.4,1437.8,686.1,1437.2,686.4L1437.2,686.4z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M1443.6,684.4h-7.7c-1.2,0-2.3,1-2.3,2.3v9.4c0,1.2,1,2.3,2.3,2.3h7.7c1.2,0,2.3-1,2.3-2.3v-9.4\r\n            C1445.9,685.5,1444.9,684.4,1443.6,684.4z M1445,696.1c0,0.8-0.6,1.4-1.4,1.4h-7.7c-0.8,0-1.4-0.6-1.4-1.4v-9.4\r\n            c0-0.8,0.6-1.4,1.4-1.4h7.7c0.8,0,1.4,0.6,1.4,1.4V696.1z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M1442.6,694.7v-2.5c0-0.5-1-0.5-1,0v2.5l-0.3-0.3c-0.4-0.4-1.1,0.3-0.7,0.7l1.1,1.1c0.3,0.3,0.5,0.3,0.8,0\r\n            l1.1-1.1c0.4-0.4-0.3-1.1-0.7-0.7L1442.6,694.7L1442.6,694.7z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M1442.6,688.1v2.5c0,0.5-1,0.5-1,0v-2.5l-0.3,0.3c-0.4,0.4-1.1-0.3-0.7-0.7l1.1-1.1c0.3-0.3,0.5-0.3,0.8,0\r\n            l1.1,1.1c0.4,0.4-0.3,1.1-0.7,0.7L1442.6,688.1L1442.6,688.1z\" />\r\n        </g>\r\n    </g>\r\n    <g>\r\n        <path fill=\"#C27FEC\" d=\"M1627.5,694.1c0,5.5,4.6,10,10.2,10s10.2-4.5,10.2-10s-4.6-10-10.2-10S1627.5,688.5,1627.5,694.1z\" />\r\n        <g>\r\n            <path fill=\"#FFFFFF\" d=\"M1634.5,692.7v1.4c0,0.4,0.2,0.6,0.5,0.8l0.3,3.6c0,0.4,0.3,0.6,0.6,0.6c0.3,0,0.5-0.2,0.6-0.6l0.3-3.6\r\n            c0.3-0.2,0.5-0.4,0.5-0.8v-1.4C1637.2,691.1,1634.5,691.1,1634.5,692.7L1634.5,692.7z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M1635.3,689.1c-0.6,0.3-0.8,1-0.5,1.6s1,0.8,1.6,0.5s0.8-1,0.5-1.6S1635.9,688.8,1635.3,689.1\r\n            L1635.3,689.1z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M1641.8,687.1h-7.7c-1.2,0-2.3,1-2.3,2.3v9.4c0,1.2,1,2.3,2.3,2.3h7.7c1.2,0,2.3-1,2.3-2.3v-9.4\r\n            C1644,688.1,1643,687.1,1641.8,687.1z M1643.2,698.8c0,0.8-0.6,1.4-1.4,1.4h-7.7c-0.8,0-1.4-0.6-1.4-1.4v-9.4\r\n            c0-0.8,0.6-1.4,1.4-1.4h7.7c0.8,0,1.4,0.6,1.4,1.4V698.8z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M1640.7,697.3v-2.5c0-0.5-1-0.5-1,0v2.5l-0.3-0.3c-0.4-0.4-1.1,0.3-0.7,0.7l1.1,1.1c0.3,0.3,0.5,0.3,0.8,0\r\n            l1.1-1.1c0.4-0.4-0.3-1.1-0.7-0.7L1640.7,697.3L1640.7,697.3z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M1640.7,690.8v2.5c0,0.5-1,0.5-1,0v-2.5l-0.3,0.3c-0.4,0.4-1.1-0.3-0.7-0.7l1.1-1.1c0.3-0.3,0.5-0.3,0.8,0\r\n            l1.1,1.1c0.4,0.4-0.3,1.1-0.7,0.7L1640.7,690.8L1640.7,690.8z\" />\r\n        </g>\r\n    </g>\r\n    <g>\r\n        <path fill=\"#C27FEC\" d=\"M765.5,418.1c0,5.5,4.6,10,10.2,10s10.2-4.5,10.2-10s-4.6-10-10.2-10S765.5,412.6,765.5,418.1z\" />\r\n        <g>\r\n            <path fill=\"#FFFFFF\" d=\"M772.5,416.8v1.4c0,0.4,0.2,0.6,0.5,0.8l0.3,3.6c0,0.4,0.3,0.6,0.6,0.6s0.5-0.2,0.6-0.6l0.3-3.6\r\n            c0.3-0.2,0.5-0.4,0.5-0.8v-1.4C775.3,415.2,772.5,415.2,772.5,416.8L772.5,416.8z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M773.4,413.1c-0.6,0.3-0.8,1-0.5,1.6s1,0.8,1.6,0.5s0.8-1,0.5-1.6C774.7,413.1,773.9,412.8,773.4,413.1\r\n            L773.4,413.1z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M779.8,411.1h-7.7c-1.2,0-2.3,1-2.3,2.3v9.4c0,1.2,1,2.3,2.3,2.3h7.7c1.2,0,2.3-1,2.3-2.3v-9.4\r\n            C782.1,412.2,781.1,411.1,779.8,411.1z M781.2,422.8c0,0.8-0.6,1.4-1.4,1.4h-7.7c-0.8,0-1.4-0.6-1.4-1.4v-9.4\r\n            c0-0.8,0.6-1.4,1.4-1.4h7.7c0.8,0,1.4,0.6,1.4,1.4V422.8z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M778.7,421.4v-2.5c0-0.5-1-0.5-1,0v2.5l-0.3-0.3c-0.4-0.4-1.1,0.3-0.7,0.7l1.1,1.1c0.3,0.3,0.5,0.3,0.8,0\r\n            l1.1-1.1c0.4-0.4-0.3-1.1-0.7-0.7L778.7,421.4L778.7,421.4z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M778.7,414.8v2.5c0,0.5-1,0.5-1,0v-2.5l-0.3,0.3c-0.4,0.4-1.1-0.3-0.7-0.7l1.1-1.1c0.3-0.3,0.5-0.3,0.8,0\r\n            l1.1,1.1c0.4,0.4-0.3,1.1-0.7,0.7L778.7,414.8L778.7,414.8z\" />\r\n        </g>\r\n    </g>\r\n    <g>\r\n        <path fill=\"#C27FEC\" d=\"M357.9,348.4c0,5.5,4.6,10,10.2,10s10.2-4.5,10.2-10s-4.6-10-10.2-10S357.9,342.9,357.9,348.4z\" />\r\n        <g>\r\n            <path fill=\"#FFFFFF\" d=\"M364.9,347.1v1.4c0,0.4,0.2,0.6,0.5,0.8l0.3,3.6c0,0.4,0.3,0.6,0.6,0.6s0.5-0.2,0.6-0.6l0.3-3.6\r\n            c0.3-0.2,0.5-0.4,0.5-0.8v-1.4C367.6,345.5,364.9,345.5,364.9,347.1L364.9,347.1z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M365.7,343.4c-0.6,0.3-0.8,1-0.5,1.6s1,0.8,1.6,0.5s0.8-1,0.5-1.6C367,343.4,366.3,343.2,365.7,343.4\r\n            L365.7,343.4z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M372.2,341.5h-7.7c-1.2,0-2.3,1-2.3,2.3v9.4c0,1.2,1,2.3,2.3,2.3h7.7c1.2,0,2.3-1,2.3-2.3v-9.4\r\n            C374.4,342.5,373.4,341.5,372.2,341.5z M373.6,353.1c0,0.8-0.6,1.4-1.4,1.4h-7.7c-0.8,0-1.4-0.6-1.4-1.4v-9.4\r\n            c0-0.8,0.6-1.4,1.4-1.4h7.7c0.8,0,1.4,0.6,1.4,1.4V353.1z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M371.1,351.7v-2.5c0-0.5-1-0.5-1,0v2.5l-0.3-0.3c-0.4-0.4-1.1,0.3-0.7,0.7l1.1,1.1c0.3,0.3,0.5,0.3,0.8,0\r\n            l1.1-1.1c0.4-0.4-0.3-1.1-0.7-0.7L371.1,351.7L371.1,351.7z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M371.1,345.2v2.5c0,0.5-1,0.5-1,0v-2.5l-0.3,0.3c-0.4,0.4-1.1-0.3-0.7-0.7l1.1-1.1c0.3-0.3,0.5-0.3,0.8,0\r\n            l1.1,1.1c0.4,0.4-0.3,1.1-0.7,0.7L371.1,345.2L371.1,345.2z\" />\r\n        </g>\r\n    </g>\r\n    <g>\r\n        <path fill=\"#C27FEC\" d=\"M1147,467.8c0,5.5,4.6,10,10.2,10s10.2-4.5,10.2-10s-4.6-10-10.2-10S1147,462.3,1147,467.8z\" />\r\n        <g>\r\n            <path fill=\"#FFFFFF\" d=\"M1154,466.4v1.4c0,0.4,0.2,0.6,0.5,0.8l0.3,3.6c0,0.4,0.3,0.6,0.6,0.6c0.3,0,0.5-0.2,0.6-0.6l0.3-3.6\r\n            c0.3-0.2,0.5-0.4,0.5-0.8v-1.4C1156.7,464.9,1154,464.9,1154,466.4L1154,466.4z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M1154.9,462.8c-0.6,0.3-0.8,1-0.5,1.6s1,0.8,1.6,0.5s0.8-1,0.5-1.6\r\n            C1156.1,462.7,1155.4,462.5,1154.9,462.8L1154.9,462.8z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M1161.3,460.8h-7.7c-1.2,0-2.3,1-2.3,2.3v9.4c0,1.2,1,2.3,2.3,2.3h7.7c1.2,0,2.3-1,2.3-2.3v-9.4\r\n            C1163.6,461.8,1162.5,460.8,1161.3,460.8z M1162.7,472.5c0,0.8-0.6,1.4-1.4,1.4h-7.7c-0.8,0-1.4-0.6-1.4-1.4v-9.4\r\n            c0-0.8,0.6-1.4,1.4-1.4h7.7c0.8,0,1.4,0.6,1.4,1.4V472.5z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M1160.2,471v-2.5c0-0.5-1-0.5-1,0v2.5l-0.3-0.3c-0.4-0.4-1.1,0.3-0.7,0.7l1.1,1.1c0.3,0.3,0.5,0.3,0.8,0\r\n            l1.1-1.1c0.4-0.4-0.3-1.1-0.7-0.7L1160.2,471L1160.2,471z\" />\r\n            <path fill=\"#FFFFFF\" d=\"M1160.2,464.5v2.5c0,0.5-1,0.5-1,0v-2.5l-0.3,0.3c-0.4,0.4-1.1-0.3-0.7-0.7l1.1-1.1c0.3-0.3,0.5-0.3,0.8,0\r\n            l1.1,1.1c0.4,0.4-0.3,1.1-0.7,0.7L1160.2,464.5L1160.2,464.5z\" />\r\n        </g>\r\n    </g>\r\n    <polygon fill=\"#B5C1C7\" points=\"75.3,784.9 85.3,794.9 85.3,784.9 \" />\r\n    <polygon fill=\"#B5C1C7\" points=\"472.8,324.9 482.8,334.9 472.8,334.9 \" />\r\n    <polygon fill=\"#B5C1C7\" points=\"845.8,351.9 855.8,361.9 845.8,361.9 \" />\r\n    <polygon fill=\"#B5C1C7\" points=\"1190.8,381.9 1200.8,391.9 1190.8,391.9 \" />\r\n    <polygon fill=\"#B5C1C7\" points=\"1250.9,507.7 1260.9,517.7 1250.9,517.7 \" />\r\n    <polygon fill=\"#B5C1C7\" points=\"1359.7,784.9 1369.7,794.9 1369.7,784.9 \" />\r\n    <polygon fill=\"#B5C1C7\" points=\"1858.5,429.9 1868.5,439.9 1858.6,439.9 \" />\r\n    <polygon fill=\"#B5C1C7\" points=\"1574.6,414.9 1584.6,424.9 1574.6,424.9 \" />\r\n</svg>\r\n`\r\nexport default svgString;\r\n       \n\n\n// WEBPACK FOOTER //\n// ./src/pages/test/config/svgString.js","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"container\"},[_c('canvas',{attrs:{\"id\":\"canvas\"}}),_vm._v(\" \"),_c('div',{staticClass:\"svg-container\",domProps:{\"innerHTML\":_vm._s(_vm.svgString)}})])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-29bfa51a\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/pages/test/index.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-29bfa51a\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./index.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-29bfa51a\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-29bfa51a\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/test/index.vue\n// module id = null\n// module chunks = ","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/engine.io-client/build/esm/util.js\n// module id = Xa7A\n// module chunks = 2","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = encode(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/engine.io-client/build/esm/transport.js\n// module id = bBnO\n// module chunks = 2","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@socket.io/component-emitter/index.mjs\n// module id = gxDI\n// module chunks = 2","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js\n// module id = jwEo\n// module chunks = 2","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/engine.io-parser/build/esm/commons.js\n// module id = null\n// module chunks = ","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data\n            .arrayBuffer()\n            .then(toArray)\n            .then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, encoded => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\nexport { encodePacket };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/engine.io-parser/build/esm/encodePacket.browser.js\n// module id = null\n// module chunks = ","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js\n// module id = null\n// module chunks = ","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/engine.io-parser/build/esm/decodePacket.browser.js\n// module id = null\n// module chunks = ","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nlet TEXT_DECODER;\nexport function decodePacketFromBinary(data, isBinary, binaryType) {\n    if (!TEXT_DECODER) {\n        // lazily created for compatibility with old browser platforms\n        TEXT_DECODER = new TextDecoder();\n    }\n    // 48 === \"0\".charCodeAt(0) (OPEN packet type)\n    // 54 === \"6\".charCodeAt(0) (NOOP packet type)\n    const isPlainBinary = isBinary || data[0] < 48 || data[0] > 54;\n    return decodePacket(isPlainBinary ? data : TEXT_DECODER.decode(data), binaryType);\n}\nexport const protocol = 4;\nexport { encodePacket, encodePacketToBinary, encodePayload, decodePacket, decodePayload };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/engine.io-parser/build/esm/index.js\n// module id = null\n// module chunks = "],"sourceRoot":""}